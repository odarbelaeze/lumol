initSidebarItems({"constant":[["S","Slice value for the full range of an axis."]],"enum":[["ErrorKind","Error code for an error related to array shape or layout."]],"fn":[["arr0","Create a zero-dimensional array with the element `x`."],["arr1","Create a one-dimensional array with elements from `xs`."],["arr2","Create a two-dimensional array with elements from `xs`."],["arr3","Create a three-dimensional array with elements from `xs`."],["aview0","Create a zero-dimensional array view borrowing `x`."],["aview1","Create a one-dimensional array view with elements borrowing `xs`."],["aview2","Create a two-dimensional array view with elements borrowing `xs`."],["aview_mut1","Create a one-dimensional read-write array view with elements borrowing `xs`."],["rcarr1","Create a one-dimensional array with elements from `xs`."],["rcarr2","Create a two-dimensional array with elements from `xs`."],["rcarr3","Create a three-dimensional array with elements from `xs`."],["stack","Stack arrays along the given axis."]],"macro":[["s","Slice argument constructor."],["stack","Stack arrays along the given axis."]],"mod":[["linalg","Linear algebra."],["prelude","ndarray prelude."]],"struct":[["ArrayBase","An *N*-dimensional array."],["Axis","An axis index."],["AxisChunksIter","An iterator that traverses over the specified axis and yields views of the specified size on this axis."],["AxisChunksIterMut","An iterator that traverses over the specified axis and yields mutable views of the specified size on this axis."],["AxisIter","An iterator that traverses over an axis and and yields each subview."],["AxisIterMut","An iterator that traverses over an axis and and yields each subview (mutable)"],["Elements","An iterator over the elements of an array."],["ElementsMut","An iterator over the elements of an array (mutable)."],["Indexed","An iterator over the indexes and elements of an array."],["IndexedMut","An iterator over the indexes and elements of an array (mutable)."],["Indexes","An iterator over the indexes of an array shape."],["InnerIter","An iterator that traverses over all dimensions but the innermost, and yields each inner row."],["InnerIterMut","An iterator that traverses over all dimensions but the innermost, and yields each inner row (mutable)."],["Shape","A contiguous array shape of n dimensions."],["ShapeError","An error related to array shape or layout."],["Si","A slice, a description of a range of an array axis."],["StrideShape","An array shape of n dimensions c-order, f-order or custom strides."],["ViewRepr","Array viewâ€™s representation."]],"trait":[["AsArray","Argument conversion into an array view"],["Data","Array representation trait."],["DataClone","Array representation trait."],["DataMut","Array representation trait."],["DataOwned","Array representation trait."],["DataShared","Array representation trait."],["Dimension","Array shape and index trait."],["FixedInitializer","Fixed-size array used for array initialization"],["LinalgScalar","Elements that support linear algebra operations."],["NdFloat","Floating-point element types `f32` and `f64`."],["NdIndex","Tuple or fixed size arrays that can be used to index an array."],["RemoveAxis","Array shape with a next smaller dimension."],["ScalarOperand","Elements that can be used as direct operands in arithmetic with arrays."],["ShapeBuilder","A trait for `Shape` and `D where D: Dimension` that allows customizing the memory layout (strides) of an array shape."]],"type":[["Array","Array where the data is owned uniquely."],["Array0","zero-dimensional array"],["Array1","one-dimensional array"],["Array2","two-dimensional array"],["Array3","three-dimensional array"],["Array4","four-dimensional array"],["ArrayD","dynamic-dimensional array"],["ArrayView","A lightweight array view."],["ArrayView0","zero-dimensional array view"],["ArrayView1","one-dimensional array view"],["ArrayView2","two-dimensional array view"],["ArrayView3","three-dimensional array view"],["ArrayView4","four-dimensional array view"],["ArrayViewD","dynamic-dimensional array view"],["ArrayViewMut","A lightweight read-write array view."],["ArrayViewMut0","zero-dimensional read-write array view"],["ArrayViewMut1","one-dimensional read-write array view"],["ArrayViewMut2","two-dimensional read-write array view"],["ArrayViewMut3","three-dimensional read-write array view"],["ArrayViewMut4","four-dimensional read-write array view"],["ArrayViewMutD","dynamic-dimensional read-write array view"],["Ix","Array index type"],["Ix0","zero-dimensionial"],["Ix1","one-dimensional"],["Ix2","two-dimensional"],["Ix3","three-dimensional"],["Ix4","four-dimensional"],["IxDyn","dynamic-dimensional"],["Ixs","Array index type (signed)"],["OwnedArray","Array where the data is owned uniquely."],["RcArray","Array where the data is reference counted and copy on write, it can act as both an owner as the data as well as a lightweight view."]]});