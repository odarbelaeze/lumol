var searchIndex = {};
searchIndex["lumol_input"] = {"doc":"This crate provide a way to build a Lumol simulation using input files.","items":[[3,"InteractionsInput","lumol_input","An interaction input file for Lumol.",null,null],[3,"Input","","An input file for Lumol.",null,null],[4,"Error","","Possible causes of error when reading input files",null,null],[13,"TOML","","Error in the TOML input file",0,null],[13,"IoError","","IO error, and associated file path",0,null],[13,"Trajectory","","Error while reading a trajectory file",0,null],[13,"Config","","File content error: missing sections, bad data types",0,null],[13,"Unit","","Unit parsing error",0,null],[11,"fmt","","",0,null],[11,"from","","",0,null],[11,"from","","",0,{"inputs":[{"name":"trajectoryerror"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"parseerror"}],"output":{"name":"error"}}],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"read_pairs","","Read the &quot;pairs&quot; section from the potential configuration. This is an\ninternal function, public because of the code organization.",1,null],[11,"read_bonds","","Read the &quot;bonds&quot; section from the potential configuration. This is an\ninternal function, public because of the code organization.",1,null],[11,"read_angles","","Read the &quot;angles&quot; section from the potential configuration. This is an\ninternal function, public because of the code organization.",1,null],[11,"read_dihedrals","","Read the &quot;dihedrals&quot; section from the potential configuration. This is\nan internal function, public because of the code organization.",1,null],[11,"read_coulomb","","Read the &quot;coulomb&quot; section from the potential configuration. This is an\ninternal function, public because of the code organization.",1,null],[11,"read_charges","","Read the &quot;charges&quot; from the potential configuration. This is an internal\nfunction, public because of the code organization.",1,null],[11,"new","","Read interactions from the TOML formatted file at `path`.",1,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_string","","Read the interactions from a TOML formatted string.",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_toml","","Read the interactions from a TOML table. This is an internal function,\npublic because of the code organization.",1,{"inputs":[{"name":"table"}],"output":{"name":"result"}}],[11,"read","","Read the interactions from this input into the `system`.",1,null],[11,"read_system","","Get the the simulated system. This is an internal function, public\nbecause of the code organization.",2,null],[11,"read_outputs","","Get the the simulation outputs. This is an internal function, public\nbecause of the code organization.",2,null],[11,"read_propagator","","Get the the simulation propagator. This is an internal function, public\nbecause of the code organization.",2,null],[11,"read_simulation","","Get the the simulation. This is an internal function, public because of\nthe code organization.",2,null],[11,"read_nsteps","","Get the number of steps in the simulation. This is an internal function,\npublic because of the code organization.",2,null],[11,"simulation_table","","Get the simulation TOML table. This is an internal function, public\nbecause of the code organization.",2,null],[11,"new","","Read the file at `Path` and create a new `Input` from it.",2,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"read","","Read input file and get the corresponding `Config`",2,null],[6,"Result","","Custom `Result` type for input files",null,null],[8,"FromToml","","Convert a TOML table to a Rust type.",null,null],[10,"from_toml","","Do the conversion from `table` to Self.",3,{"inputs":[{"name":"table"}],"output":{"name":"result"}}],[8,"FromTomlWithData","","Convert a TOML table and some additional data to a Rust type.",null,null],[16,"Data","","The type of the additional data needed.",4,null],[10,"from_toml","","Do the conversion from `table` and `data` to Self.",4,{"inputs":[{"name":"table"},{"name":"data"}],"output":{"name":"result"}}]],"paths":[[4,"Error"],[3,"InteractionsInput"],[3,"Input"],[8,"FromToml"],[8,"FromTomlWithData"]]};
searchIndex["toml"] = {"doc":"A TOML-parsing library","items":[[3,"Parser","toml","Parser for converting a string to a TOML `Value` instance.",null,null],[12,"errors","","A list of all errors which have occurred during parsing.",0,null],[3,"ParserError","","A structure representing a parse error.",null,null],[12,"lo","","The low byte at which this error is pointing at.",1,null],[12,"hi","","One byte beyond the last character at which this error is pointing at.",1,null],[12,"desc","","A human-readable description explaining what the error is.",1,null],[3,"Encoder","","A structure to transform Rust values into TOML values.",null,null],[12,"toml","","Output TOML that is emitted. The current version of this encoder forces\nthe top-level representation of a structure to be a table.",2,null],[3,"EncoderState","","Internal state of the encoder when encoding transitions",null,null],[3,"Decoder","","A structure to transform TOML values into Rust values.",null,null],[12,"toml","","The TOML value left over after decoding. This can be used to inspect\nwhether fields were decoded or not.",3,null],[3,"DecodeError","","Description for errors which can occur while decoding a type.",null,null],[12,"field","","Field that this error applies to.",4,null],[12,"kind","","The type of error which occurred while decoding,",4,null],[4,"Error","","Enumeration of errors which can occur while encoding a rust value into a\nTOML value.",null,null],[13,"NeedsKey","","Indication that a key was needed when a value was emitted, but no key\nwas previously emitted.",5,null],[13,"NoValue","","Indication that a key was emitted, but no value was emitted.",5,null],[13,"InvalidMapKeyLocation","","Indicates that a map key was attempted to be emitted at an invalid\nlocation.",5,null],[13,"InvalidMapKeyType","","Indicates that a type other than a string was attempted to be used as a\nmap key type.",5,null],[13,"Custom","","A custom error type was generated",5,null],[4,"DecodeErrorKind","","Enumeration of possible errors which can occur while decoding a structure.",null,null],[13,"ApplicationError","","An error flagged by the application, e.g. value out of range",6,null],[13,"ExpectedField","","A field was expected, but none was found.",6,null],[13,"UnknownField","","A field was found, but it was not an expected one.",6,null],[13,"ExpectedType","","A field was found, but it had the wrong type.",6,null],[13,"ExpectedMapKey","","The nth map key was expected, but none was found.",6,null],[13,"ExpectedMapElement","","The nth map element was expected, but none was found.",6,null],[13,"NoEnumVariants","","An enum decoding was requested, but no variants were supplied",6,null],[13,"NilTooLong","","The unit type was being decoded, but a non-zero length string was found",6,null],[13,"SyntaxError","","There was an error with the syntactical structure of the TOML.",6,null],[13,"CustomError","","A custom error was generated when decoding.",6,null],[13,"EndOfStream","","The end of the TOML input was reached too soon",6,null],[13,"InvalidType","","Produced by serde ...",6,null],[4,"Value","","Representation of a TOML value.",null,null],[13,"String","","",7,null],[13,"Integer","","",7,null],[13,"Float","","",7,null],[13,"Boolean","","",7,null],[13,"Datetime","","",7,null],[13,"Array","","",7,null],[13,"Table","","",7,null],[5,"encode","","Encodes an encodable value into a TOML value.",null,{"inputs":[{"name":"t"}],"output":{"name":"value"}}],[5,"encode_str","","Encodes an encodable value into a TOML string.",null,{"inputs":[{"name":"t"}],"output":{"name":"string"}}],[5,"decode","","Decodes a TOML value into a decodable type.",null,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[5,"decode_str","","Decodes a string into a toml-encoded value.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"new","","Creates a new parser for a string.",0,{"inputs":[{"name":"str"}],"output":{"name":"parser"}}],[11,"to_linecol","","Converts a byte offset from an error message to a (line, column) pair",0,null],[11,"set_require_newline_after_table","","Historical versions of toml-rs accidentally allowed a newline after a\ntable definition, but the TOML spec requires a newline after a table\ndefinition header.",0,null],[11,"parse","","Executes the parser, parsing the string contained within.",0,null],[11,"lookup","","Parse a path into a vector of paths",0,null],[11,"description","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",7,null],[11,"emit_nil","","",2,null],[11,"emit_usize","","",2,null],[11,"emit_u8","","",2,null],[11,"emit_u16","","",2,null],[11,"emit_u32","","",2,null],[11,"emit_u64","","",2,null],[11,"emit_isize","","",2,null],[11,"emit_i8","","",2,null],[11,"emit_i16","","",2,null],[11,"emit_i32","","",2,null],[11,"emit_i64","","",2,null],[11,"emit_bool","","",2,null],[11,"emit_f32","","",2,null],[11,"emit_f64","","",2,null],[11,"emit_char","","",2,null],[11,"emit_str","","",2,null],[11,"emit_enum","","",2,null],[11,"emit_enum_variant","","",2,null],[11,"emit_enum_variant_arg","","",2,null],[11,"emit_enum_struct_variant","","",2,null],[11,"emit_enum_struct_variant_field","","",2,null],[11,"emit_struct","","",2,null],[11,"emit_struct_field","","",2,null],[11,"emit_tuple","","",2,null],[11,"emit_tuple_arg","","",2,null],[11,"emit_tuple_struct","","",2,null],[11,"emit_tuple_struct_arg","","",2,null],[11,"emit_option","","",2,null],[11,"emit_option_none","","",2,null],[11,"emit_option_some","","",2,null],[11,"emit_seq","","",2,null],[11,"emit_seq_elt","","",2,null],[11,"emit_map","","",2,null],[11,"emit_map_elt_key","","",2,null],[11,"emit_map_elt_val","","",2,null],[11,"encode","","",7,null],[11,"default","","",2,{"inputs":[],"output":{"name":"encoder"}}],[11,"fmt","","",2,null],[11,"fmt","","",5,null],[11,"fmt","","",8,null],[11,"new","","Constructs a new encoder which will emit to the given output stream.",2,{"inputs":[],"output":{"name":"encoder"}}],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"read_nil","","",3,null],[11,"read_usize","","",3,null],[11,"read_u64","","",3,null],[11,"read_u32","","",3,null],[11,"read_u16","","",3,null],[11,"read_u8","","",3,null],[11,"read_isize","","",3,null],[11,"read_i64","","",3,null],[11,"read_i32","","",3,null],[11,"read_i16","","",3,null],[11,"read_i8","","",3,null],[11,"read_bool","","",3,null],[11,"read_f64","","",3,null],[11,"read_f32","","",3,null],[11,"read_char","","",3,null],[11,"read_str","","",3,null],[11,"read_enum","","",3,null],[11,"read_enum_variant","","",3,null],[11,"read_enum_variant_arg","","",3,null],[11,"read_enum_struct_variant","","",3,null],[11,"read_enum_struct_variant_field","","",3,null],[11,"read_struct","","",3,null],[11,"read_struct_field","","",3,null],[11,"read_tuple","","",3,null],[11,"read_tuple_arg","","",3,null],[11,"read_tuple_struct","","",3,null],[11,"read_tuple_struct_arg","","",3,null],[11,"read_option","","",3,null],[11,"read_seq","","",3,null],[11,"read_seq_elt","","",3,null],[11,"read_map","","",3,null],[11,"read_map_elt_key","","",3,null],[11,"read_map_elt_val","","",3,null],[11,"error","","",3,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"fmt","","",6,null],[11,"new","","Creates a new decoder, consuming the TOML value to decode.",3,{"inputs":[{"name":"value"}],"output":{"name":"decoder"}}],[11,"fmt","","",4,null],[11,"description","","",4,null],[6,"Array","","Type representing a TOML array, payload of the `Value::Array` variant",null,null],[6,"Table","","Type representing a TOML table, payload of the `Value::Table` variant",null,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"same_type","","Tests whether this and another value have the same type.",7,null],[11,"type_str","","Returns a human-readable representation of the type of this value.",7,null],[11,"as_str","","Extracts the string of this value if it is a string.",7,null],[11,"as_integer","","Extracts the integer value if it is an integer.",7,null],[11,"as_float","","Extracts the float value if it is a float.",7,null],[11,"as_bool","","Extracts the boolean value if it is a boolean.",7,null],[11,"as_datetime","","Extracts the datetime value if it is a datetime.",7,null],[11,"as_slice","","Extracts the array value if it is an array.",7,null],[11,"as_table","","Extracts the table value if it is a table.",7,null],[11,"lookup","","Lookups for value at specified path.",7,null],[11,"lookup_mut","","Lookups for mutable value at specified path.",7,null],[11,"from_str","","",7,{"inputs":[{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Parser"],[3,"ParserError"],[3,"Encoder"],[3,"Decoder"],[3,"DecodeError"],[4,"Error"],[4,"DecodeErrorKind"],[4,"Value"],[3,"EncoderState"]]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",4,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",5,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",7,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",8,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"description","","",6,null],[11,"fmt","","",6,null],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,null],[11,"clone","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"fmt","","",12,null],[11,"fmt","","",13,null],[11,"eq","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",10,null],[11,"description","","",12,null],[11,"cause","","",12,null],[11,"fmt","","",12,null],[11,"from","","",12,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",11,null],[11,"fmt","","",11,null],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",13,null],[11,"fmt","","",13,null],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",17,null],[11,"emit_nil","","",17,null],[11,"emit_usize","","",17,null],[11,"emit_u64","","",17,null],[11,"emit_u32","","",17,null],[11,"emit_u16","","",17,null],[11,"emit_u8","","",17,null],[11,"emit_isize","","",17,null],[11,"emit_i64","","",17,null],[11,"emit_i32","","",17,null],[11,"emit_i16","","",17,null],[11,"emit_i8","","",17,null],[11,"emit_bool","","",17,null],[11,"emit_f64","","",17,null],[11,"emit_f32","","",17,null],[11,"emit_char","","",17,null],[11,"emit_str","","",17,null],[11,"emit_enum","","",17,null],[11,"emit_enum_variant","","",17,null],[11,"emit_enum_variant_arg","","",17,null],[11,"emit_enum_struct_variant","","",17,null],[11,"emit_enum_struct_variant_field","","",17,null],[11,"emit_struct","","",17,null],[11,"emit_struct_field","","",17,null],[11,"emit_tuple","","",17,null],[11,"emit_tuple_arg","","",17,null],[11,"emit_tuple_struct","","",17,null],[11,"emit_tuple_struct_arg","","",17,null],[11,"emit_option","","",17,null],[11,"emit_option_none","","",17,null],[11,"emit_option_some","","",17,null],[11,"emit_seq","","",17,null],[11,"emit_seq_elt","","",17,null],[11,"emit_map","","",17,null],[11,"emit_map_elt_key","","",17,null],[11,"emit_map_elt_val","","",17,null],[11,"encode","","",9,null],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",9,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",9,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",9,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",9,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,null],[11,"as_object","","If the Json value is an Object, returns a reference to the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"as_object_mut","","If the Json value is an Object, returns a mutable reference to the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"into_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,null],[11,"as_array","","If the Json value is an Array, returns a reference to the associated vector.\nReturns None otherwise.",9,null],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference to the associated vector.\nReturns None otherwise.",9,null],[11,"into_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",9,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",9,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",9,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",9,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",9,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",9,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",9,null],[11,"index","","",9,null],[11,"index","","",9,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",14,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"new","","",18,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,null],[11,"is_empty","","Returns true if the stack is empty.",18,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",18,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,null],[11,"next","","",19,null],[11,"new","","Creates the JSON parser.",19,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",19,null],[11,"new","","Create a JSON Builder.",20,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",20,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",21,null],[11,"read_usize","","",21,null],[11,"read_u8","","",21,null],[11,"read_u16","","",21,null],[11,"read_u32","","",21,null],[11,"read_u64","","",21,null],[11,"read_isize","","",21,null],[11,"read_i8","","",21,null],[11,"read_i16","","",21,null],[11,"read_i32","","",21,null],[11,"read_i64","","",21,null],[11,"read_f32","","",21,null],[11,"read_f64","","",21,null],[11,"read_bool","","",21,null],[11,"read_char","","",21,null],[11,"read_str","","",21,null],[11,"read_enum","","",21,null],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,null],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,null],[11,"read_struct","","",21,null],[11,"read_struct_field","","",21,null],[11,"read_tuple","","",21,null],[11,"read_tuple_arg","","",21,null],[11,"read_tuple_struct","","",21,null],[11,"read_tuple_struct_arg","","",21,null],[11,"read_option","","",21,null],[11,"read_seq","","",21,null],[11,"read_seq_elt","","",21,null],[11,"read_map","","",21,null],[11,"read_map_elt_key","","",21,null],[11,"read_map_elt_val","","",21,null],[11,"error","","",21,null],[11,"to_json","","",9,null],[11,"fmt","","Encodes a json value into a string",9,null],[11,"fmt","","Encodes a json value into a string",22,null],[11,"fmt","","Encodes a json value into a string",23,null],[11,"indent","","Set the indentation level for the emitted JSON",24,null],[11,"fmt","","Encodes a json value into a string",24,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",null,null],[16,"Error","","The error type for method results.",25,null],[10,"read_nil","","Read a nil value.",25,null],[10,"read_usize","","Read a usize value.",25,null],[10,"read_u64","","Read a u64 value.",25,null],[10,"read_u32","","Read a u32 value.",25,null],[10,"read_u16","","Read a u16 value.",25,null],[10,"read_u8","","Read a u8 value.",25,null],[10,"read_isize","","Read a isize value.",25,null],[10,"read_i64","","Read a i64 value.",25,null],[10,"read_i32","","Read a i32 value.",25,null],[10,"read_i16","","Read a i16 value.",25,null],[10,"read_i8","","Read a i8 value.",25,null],[10,"read_bool","","Read a bool value.",25,null],[10,"read_f64","","Read a f64 value.",25,null],[10,"read_f32","","Read a f32 value.",25,null],[10,"read_char","","Read a char value.",25,null],[10,"read_str","","Read a string value.",25,null],[10,"read_enum","","Read an enumeration value.",25,null],[10,"read_enum_variant","","Read an enumeration value.",25,null],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",25,null],[10,"read_enum_struct_variant","","Read an enumeration value.",25,null],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",25,null],[10,"read_struct","","Read an struct value.",25,null],[10,"read_struct_field","","Read a field for a struct value.",25,null],[10,"read_tuple","","Read a tuple value.",25,null],[10,"read_tuple_arg","","Read a data item for a tuple.",25,null],[10,"read_tuple_struct","","Read a tuple struct value.",25,null],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",25,null],[10,"read_option","","Read an optional value.",25,null],[10,"read_seq","","Read a sequence of values.",25,null],[10,"read_seq_elt","","Read an element in the sequence.",25,null],[10,"read_map","","Read an associative container (map).",25,null],[10,"read_map_elt_key","","Read the key for an entry in a map.",25,null],[10,"read_map_elt_val","","Read the value for an entry in a map.",25,null],[10,"error","","Record a decoding error.",25,null],[8,"Encoder","","Trait for writing out an encoding when serializing.",null,null],[16,"Error","","The error type for method results.",26,null],[10,"emit_nil","","Emit a nil value.",26,null],[10,"emit_usize","","Emit a usize value.",26,null],[10,"emit_u64","","Emit a u64 value.",26,null],[10,"emit_u32","","Emit a u32 value.",26,null],[10,"emit_u16","","Emit a u16 value.",26,null],[10,"emit_u8","","Emit a u8 value.",26,null],[10,"emit_isize","","Emit a isize value.",26,null],[10,"emit_i64","","Emit a i64 value.",26,null],[10,"emit_i32","","Emit a i32 value.",26,null],[10,"emit_i16","","Emit a i16 value.",26,null],[10,"emit_i8","","Emit a i8 value.",26,null],[10,"emit_bool","","Emit a bool value.",26,null],[10,"emit_f64","","Emit a f64 value.",26,null],[10,"emit_f32","","Emit a f32 value.",26,null],[10,"emit_char","","Emit a char value.",26,null],[10,"emit_str","","Emit a string value.",26,null],[10,"emit_enum","","Emit an enumeration value.",26,null],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",26,null],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",26,null],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",26,null],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",26,null],[10,"emit_struct","","Emit a struct value.",26,null],[10,"emit_struct_field","","Emit a field item for a struct.",26,null],[10,"emit_tuple","","Emit a tuple value.",26,null],[10,"emit_tuple_arg","","Emit a data item for a tuple.",26,null],[10,"emit_tuple_struct","","Emit a tuple struct value.",26,null],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",26,null],[10,"emit_option","","Emit an optional value.",26,null],[10,"emit_option_none","","Emit the `None` optional value.",26,null],[10,"emit_option_some","","Emit the `Some(x)` optional value.",26,null],[10,"emit_seq","","Emit a sequence of values.",26,null],[10,"emit_seq_elt","","Emit an element in a sequence.",26,null],[10,"emit_map","","Emit an associative container (map).",26,null],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",26,null],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",26,null],[8,"Decodable","","Trait for deserializing a type.",null,null],[10,"decode","","Deserialize a value using a `Decoder`.",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","Trait for serializing a type.",null,null],[10,"encode","","Serialize a value using an `Encoder`.",28,null],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",null,null],[10,"read_to_vec","","Read a sequence into a vector.",29,null],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",null,null],[10,"emit_from_vec","","Emit a vector as a sequence.",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["lumol"] = {"doc":"Lumol is a classical molecular simulation engine that provides a solid\nbase for developing new algorithms and methods.","items":[[4,"LogLevel","lumol","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[3,"Logger","","Logger with capacity to write to the standard output stream, the standard\nerror stream or a file.",null,null],[11,"stdout","","Initialize the global logger to use the standard output stream.",1,{"inputs":[],"output":null}],[11,"stdout_at_level","","Initialize the global logger to use the standard output stream, with\nthe maximum log level of `level`",1,{"inputs":[{"name":"loglevel"}],"output":null}],[11,"stderr","","Initialize the global logger to use the standard error stream.",1,{"inputs":[],"output":null}],[11,"stderr_at_level","","Initialize the global logger to use the standard error stream, with\nthe maximum log level of `level`",1,{"inputs":[{"name":"loglevel"}],"output":null}],[11,"file","","Initialize the global logger to write to the file at `path`, creating\nthe file if needed. If the file already exists, it is not removed.",1,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"file_at_level","","Initialize the global logger to write to the file at `path`, creating\nthe file if needed. If the file already exists, it is not removed. The\nmaximum log level is set to `level`.",1,{"inputs":[{"name":"p"},{"name":"loglevel"}],"output":{"name":"result"}}],[11,"target","","Get the target for log events",1,{"inputs":[],"output":{"name":"target"}}],[11,"is_screen","","Is the log events target the screen?",1,{"inputs":[],"output":{"name":"bool"}}],[11,"is_file","","Is the log events target a file?",1,{"inputs":[],"output":{"name":"bool"}}],[11,"enabled","","",1,null],[11,"log","","",1,null],[0,"units","","This module allow to convert from and to the internal unit system.",null,null],[4,"ParseError","lumol::units","Possible error causes when parsing an unit string.",null,null],[13,"Power","","Error while parsing a power in `x^y` expressions",2,null],[13,"Value","","Error while parsing the value part of an unit string",2,null],[13,"ParenthesesMismatch","","Parentheses are not balanced in this unit",2,null],[13,"NotFound","","This unit was not found",2,null],[12,"unit","lumol::units::ParseError","The unit that created this error",2,null],[13,"MalformedExpr","lumol::units","Any other error",2,null],[5,"from","","Convert the numeric value `val` from the unit `unit` to the internal unit.",null,{"inputs":[{"name":"f64"},{"name":"str"}],"output":{"name":"result"}}],[5,"from_str","","Parse the string `val` and convert it to the corresponding internal unit",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"to","","Convert the numeric value `val` (in internal units) to the unit `unit`.",null,{"inputs":[{"name":"f64"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",2,null],[11,"from","","",2,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseerror"}}],[11,"from","","",2,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",2,null],[11,"description","","",2,null],[0,"consts","lumol","Useful physical constants, expressed in the internal unit system.",null,null],[17,"K_BOLTZMANN","lumol::consts","Boltzmann constant",null,null],[17,"BOHR_RADIUS","","Bohr radius",null,null],[17,"NA","","Avogadro number",null,null],[17,"ELCC","","4 * pi * epsilon_0",null,null],[0,"types","lumol","Linear algebra types for Lumol.",null,null],[8,"One","lumol::types","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",4,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",4,null],[3,"Vector3D","","A 3-dimensional vector type",null,null],[3,"Matrix3","","A 3x3 square matrix type.",null,null],[3,"Complex","","Complex number, with double precision real and imaginary parts.",null,null],[3,"Array2","","Two dimensional tensors, based on ndarray.",null,null],[3,"Array3","","Three dimensional tensors, based on ndarray",null,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"new","","Create a new `Vector3D` with components `x`, `y`, `z`",5,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"vector3d"}}],[11,"norm2","","Return the squared euclidean norm of a `Vector3D`",5,null],[11,"norm","","Return the euclidean norm of a `Vector3D`\n# Examples\n```\n# use lumol::types::Vector3D;\n# use std::f64;\nlet vec = Vector3D::new(1.0, 0.0, -4.0);\nassert_eq!(vec.norm(), f64::sqrt(17.0));\n```",5,null],[11,"normalized","","Normalize a `Vector3D`.\n# Examples\n```\n# use lumol::types::Vector3D;\nlet vec = Vector3D::new(1.0, 0.0, -4.0);\nlet n = vec.normalized();\nassert_eq!(n.norm(), 1.0);\n```",5,null],[11,"tensorial","","Tensorial product between vectors. The tensorial product between the\nvectors `a` and `b` creates a `Matrix3` with component (i, j) equals to\n`a[i] * b[j]`.",5,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"add_assign","","",5,null],[11,"add_assign","","",5,null],[11,"add_assign","","",5,null],[11,"sub","","",5,null],[11,"sub","","",5,null],[11,"sub","","",5,null],[11,"sub_assign","","",5,null],[11,"sub_assign","","",5,null],[11,"sub_assign","","",5,null],[11,"mul","","",5,null],[11,"mul","","",5,null],[11,"mul","","",5,null],[11,"bitxor","","",5,null],[11,"bitxor","","",5,null],[11,"bitxor","","",5,null],[11,"mul","","",5,null],[11,"mul_assign","","",5,null],[11,"mul_assign","","",5,null],[11,"mul_assign","","",5,null],[11,"div","","",5,null],[11,"div_assign","","",5,null],[11,"div_assign","","",5,null],[11,"div_assign","","",5,null],[11,"neg","","",5,null],[11,"eq","","",5,null],[11,"index","","",5,null],[11,"index_mut","","",5,null],[11,"zero","","",5,{"inputs":[],"output":{"name":"vector3d"}}],[11,"is_zero","","",5,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"new","","Create a new `Matrix3` specifying all its components\n# Examples\n```\n# use lumol::types::Matrix3;\nlet matrix = Matrix3::new(\n    0.0, 0.0, 3.0,\n    0.0, 1.0, 5.6,\n    0.0, 0.0, 7.0\n);\nassert_eq!(matrix[0][2], 3.0);\n```",6,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"matrix3"}}],[11,"trace","","Compute the trace of the matrix\n# Examples\n```\n# use lumol::types::Matrix3;\nlet matrix = Matrix3::new(\n    0.0, 0.0, 3.0,\n    0.0, 1.0, 5.6,\n    0.0, 0.0, 7.0\n);\nassert_eq!(matrix.trace(), 8.0);\n```",6,null],[11,"inverse","","Computes the inverse of a matrix",6,null],[11,"determinant","","Computes the [determinant][Wiki] of a matrix",6,null],[11,"transposed","","Transpose this matrix into a new matrix\n# Examples",6,null],[11,"index","","",6,null],[11,"index","","",6,null],[11,"index_mut","","",6,null],[11,"index_mut","","",6,null],[11,"add","","",6,null],[11,"add","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"add_assign","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"sub_assign","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"mul_assign","","",6,null],[11,"mul_assign","","",6,null],[11,"mul","","",6,null],[11,"mul","","",6,null],[11,"mul","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"mul_assign","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"div_assign","","",6,null],[11,"div_assign","","",6,null],[11,"zero","","",6,{"inputs":[],"output":{"name":"matrix3"}}],[11,"is_zero","","",6,null],[11,"one","","Create an identity matrix",6,{"inputs":[],"output":{"name":"matrix3"}}],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"complex"}}],[11,"polar","","Create a new `Complex` from a norm `r` and a phase `phi` in radians.\n# Examples\n```\n# use lumol::types::Complex;\n# use std::f64;\nlet z = Complex::polar(3.0, f64::consts::PI);\nassert_eq!(z.norm(), 3.0);\n```",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"complex"}}],[11,"cartesian","","Create a complex from Cartesian coordinates\n# Examples\n```\n# use lumol::types::Complex;\nlet z = Complex::cartesian(3.0, -2.0);\nassert_eq!(z.real(), 3.0);\nassert_eq!(z.imag(), -2.0);\n```",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"complex"}}],[11,"real","","Get the real part of the complex\n# Examples\n```\n# use lumol::types::Complex;\nlet z = Complex::cartesian(3.0, -2.0);\nassert_eq!(z.real(), 3.0);\n```",7,null],[11,"imag","","Get the imaginary part of the complex\n# Examples\n```\n# use lumol::types::Complex;\nlet z = Complex::cartesian(3.0, -2.0);\nassert_eq!(z.imag(), -2.0);\n```",7,null],[11,"phase","","Get the phase of the complex in the [-π, π) interval\n# Examples\n```\n# use lumol::types::Complex;\nlet z = Complex::polar(2.0, 0.3);\nassert_eq!(z.phase(), 0.3);\n```",7,null],[11,"norm","","Get the norm of the complex\n# Examples\n```\n# use lumol::types::Complex;\n# use std::f64;\nlet z = Complex::polar(2.0, 0.3);\nassert_eq!(z.norm(), 2.0);",7,null],[11,"norm2","","Get the square of the norm if this complex\n# Examples\n```\n# use lumol::types::Complex;\nlet z = Complex::cartesian(2.0, 1.0);\nassert_eq!(z.norm2(), 5.0);\n```",7,null],[11,"conj","","Get the conjugate of the complex\n# Examples\n```\n# use lumol::types::Complex;\nlet z = Complex::cartesian(2.0, 1.0);\nassert_eq!(z.conj(), Complex::cartesian(2.0, -1.0));\n```",7,null],[11,"add","","",7,null],[11,"sub","","",7,null],[11,"neg","","",7,null],[11,"mul","","",7,null],[11,"mul","","",7,null],[11,"div","","",7,null],[11,"div","","",7,null],[11,"zero","","",7,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",7,null],[11,"one","","",7,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",8,null],[11,"clone","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"shape","","Get the shape of the array\n# Examples\n```\n# use lumol::types::Array2;\nlet a: Array2&lt;f64&gt; = Array2::zeros((3, 5));\nassert_eq!(a.shape(), (3, 5));\n```",8,null],[11,"zeros","","Create a new `Array2` of the specified `size` filled with the\n`Zero::zero` return value.",8,null],[11,"resize_if_different","","Resize the array if the current size is not `size`, and fill the\nnew array with zeros.",8,null],[11,"assign","","Assign the given scalar to all entries in this array\n# Examples\n```\n# use lumol::types::Array2;\nlet mut a = Array2::zeros((8, 5));\na.assign(33.0);",8,null],[11,"default","","Create a new `Array2` of the specified `size` filled with the\n`Default::default` return value.",8,null],[11,"index","","",8,null],[11,"index_mut","","",8,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"shape","","Get the shape of the array.\n# Examples\n```\n# use lumol::types::Array3;\nlet a: Array3&lt;f64&gt; = Array3::zeros((3, 5, 7));\nassert_eq!(a.shape(), (3, 5, 7));\n```",9,null],[11,"zeros","","Create a new `Array3` of the specified `size` filled with the\n`Zero::zero` return value.",9,null],[11,"resize_if_different","","Resize the array if the current size is not `size`, and fill the\nnew array with zeros.",9,null],[11,"assign","","Assign the given scalar to all entries in this array",9,null],[11,"default","","Create a new `Array3` of the specified `size` filled with the\n`Default::default` return value.\n`Default::default` return value.",9,null],[11,"index","","",9,null],[11,"index_mut","","",9,null],[0,"energy","lumol","Interaction potentials for energy and forces computations",null,null],[3,"NullPotential","lumol::energy","No-op potential.",null,null],[3,"LennardJones","","Lennard-Jones potential.",null,null],[12,"sigma","","Distance constant of the Lennard-Jones potential",10,null],[12,"epsilon","","Energy constant of the Lennard-Jones potential",10,null],[3,"Harmonic","","Harmonic potential.",null,null],[12,"k","","Spring constant",11,null],[12,"x0","","Equilibrium value",11,null],[3,"CosineHarmonic","","Cosine harmonic potential.",null,null],[3,"Torsion","","Torsion potential.",null,null],[12,"k","","Force constant",12,null],[12,"delta","","Equilibrium value",12,null],[12,"n","","Multiplicity of the potential",12,null],[3,"TableComputation","","Computation of a potential using tabulated values.",null,null],[3,"RestrictionInfo","","Restriction information attached to a pair of `Particles` in a `System`.",null,null],[12,"excluded","","Is this pair excluded?",13,null],[12,"scaling","","Scaling factor for the potential. This value is contained between 0 and\n1.",13,null],[3,"Wolf","","Wolf summation for coulombic interactions.",null,null],[3,"Ewald","","Ewald summation for coulombic interactions.",null,null],[3,"PairInteraction","","A non-bonded interaction between two particle.",null,null],[4,"PairRestriction","","Possible restrictions on the pair interactions.",null,null],[13,"None","","No pair should be excluded.",14,null],[13,"IntraMolecular","","Only apply the interaction to intra-molecular pairs.",14,null],[13,"InterMolecular","","Only apply the interaction to inter-molecular pairs.",14,null],[13,"Exclude12","","Only apply the interaction to pairs which are not in 1-2 position\n(separated by one bond).",14,null],[13,"Exclude13","","Only apply the interaction to pairs which are not in 1-2 or 1-3 position\n(separated by one or two bonds).",14,null],[13,"Exclude14","","Only apply the interaction to pairs which are not in 1-2, 1-3 or 1-4\nposition (separated by one, two or three bonds).",14,null],[13,"Scale14","","Only apply the interaction to pairs which are not in 1-2 or 1-3\nposition, and scale the interaction for pairs in 1-4 position (separated\nby three bonds).",14,null],[11,"clone","","",15,null],[11,"energy","","",15,null],[11,"force","","",15,null],[11,"clone","","",10,null],[11,"energy","","",10,null],[11,"force","","",10,null],[11,"clone","","",11,null],[11,"energy","","",11,null],[11,"force","","",11,null],[11,"clone","","",16,null],[11,"new","","Create a new `CosineHarmonic` potentials, with elastic constant of `k`\nand equilibrium value of `x0`",16,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"cosineharmonic"}}],[11,"energy","","",16,null],[11,"force","","",16,null],[11,"clone","","",12,null],[11,"energy","","",12,null],[11,"force","","",12,null],[11,"clone","","",17,null],[11,"new","","Create a new `TableComputation` for `potential`, with `size` points and\na maximum value of `max`.",17,{"inputs":[{"name":"pairpotential"},{"name":"usize"},{"name":"f64"}],"output":{"name":"tablecomputation"}}],[11,"compute_energy","","",17,null],[11,"compute_force","","",17,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"information","","Get the restriction at the given [bond `distance`][distance].",14,null],[11,"clone","","",18,null],[11,"new","","Create a new Wolf summation, using a real-space cutoff of `cutoff`.",18,{"inputs":[{"name":"f64"}],"output":{"name":"wolf"}}],[11,"move_particles_cost","","",18,null],[11,"update","","",18,null],[11,"energy","","",18,null],[11,"forces","","",18,null],[11,"virial","","",18,null],[11,"set_restriction","","",18,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"new","","Create an Ewald summation using the given `cutoff` radius in real\nspace, and `kmax` points in k-space (Fourier space).",19,{"inputs":[{"name":"f64"},{"name":"usize"}],"output":{"name":"ewald"}}],[11,"energy","","",19,null],[11,"forces","","",19,null],[11,"virial","","",19,null],[11,"set_restriction","","",19,null],[11,"move_particles_cost","","",19,null],[11,"update","","",19,null],[11,"clone","","",20,null],[11,"new","","Create a new `PairInteraction` for the given `potential` and using the\ngiven `cutoff` distance.",20,{"inputs":[{"name":"box"},{"name":"f64"}],"output":{"name":"pairinteraction"}}],[11,"shifted","","Create a new `PairInteraction` with the given `cutoff`, using shifted\ncomputation of the energy.",20,{"inputs":[{"name":"box"},{"name":"f64"}],"output":{"name":"pairinteraction"}}],[11,"restriction","","Get the associated pair restriction. The default is to have no pair\nrestriction.",20,null],[11,"set_restriction","","Set the pair restriction associated with this interaction.",20,null],[11,"energy","","",20,null],[11,"force","","",20,null],[8,"Potential","","A potential for force and energy computations.",null,null],[10,"energy","","Get the energy corresponding to the variable `x`",21,null],[10,"force","","Get the force norm corresponding to the variable `x`",21,null],[8,"PairPotential","","Marker trait for potentials that can be used for non-bonded two body\ninteractions.",null,null],[11,"virial","","Compute the virial contribution corresponding to the distance `r`\nbetween the particles.",22,null],[8,"BondPotential","","Marker trait for potentials that can be used for molecular bonds.",null,null],[11,"virial","","Compute the virial contribution corresponding to the distance `r`\nbetween the particles.",23,null],[8,"AnglePotential","","Marker trait for potentials that can be used for molecular angles.",null,null],[8,"DihedralPotential","","Marker trait for potentials that can be used for molecular dihedral angles.",null,null],[8,"Computation","","Alternative energy and forces computation.",null,null],[10,"compute_energy","","Compute the energy value at `r`",24,null],[10,"compute_force","","Compute the force value at `r`",24,null],[8,"GlobalPotential","","A potential acting on the whole [System][System] at once.",null,null],[10,"energy","","Compute the energetic contribution of this potential",25,null],[10,"forces","","Compute the force contribution of this potential. This function should\nreturn a vector containing the force acting on each particle in the\nsystem.",25,null],[10,"virial","","Compute the total virial contribution of this potential",25,null],[8,"GlobalCache","","Energetic cache for global potentials.",null,null],[10,"move_particles_cost","","Get the cost of moving particles in the system.",26,null],[10,"update","","Update the cache as needed after a call to `move_particles_cost`.",26,null],[8,"CoulombicPotential","","Electrostatic potential solver.",null,null],[10,"set_restriction","","Set the pair restriction scheme to use to the given `restriction`. All\nfuture call to `GlobalPotential::energy`, `GlobalPotential::force` or\n`GlobalPotential::virial` should use this restriction.",27,null],[0,"sys","lumol","The `system` module provide a way to store data about a simulated system.\nThese systems are represented by an `System` instance, made of a list of\n`Particle`, an enclosing `UnitCell` and some interactions.",null,null],[3,"PeriodicTable","lumol::sys","The `PeriodicTable` struct give access to elements information, and give a\nway to register new elements in the list.",null,null],[3,"ElementData","","Data about one &quot;extended&quot; chemical element.",null,null],[12,"symbol","","The symbol is used to identify the element",28,null],[12,"name","","The element full name",28,null],[12,"mass","","The element mass, in internal units",28,null],[12,"covalent","","The covalent radius, in internal units",28,null],[12,"vdw","","The Van der Waals radius, in internal units",28,null],[3,"Particle","","The Particle type hold basic data about a particle in the system. It is self\ncontained, so that it will be easy to send data between parallels processes.",null,null],[12,"kind","","Particle kind, an index for potentials lookup",29,null],[12,"mass","","Particle mass",29,null],[12,"charge","","Particle charge",29,null],[12,"position","","Particle positions",29,null],[12,"velocity","","Particle velocity, if needed",29,null],[3,"ParticleKind","","A particle kind. Particles with the same name will have the same kind. This\nis used for faster potential lookup.",null,null],[12,"0","","",30,null],[3,"UnitCell","","An UnitCell defines the system physical boundaries.",null,null],[3,"Bond","","A `Bond` between the atoms at indexes `i` and `j`",null,null],[3,"Angle","","An `Angle` formed by the atoms at indexes `i`, `j` and `k`",null,null],[3,"Dihedral","","A `Dihedral` angle formed by the atoms at indexes `i`, `j`, `k` and `m`",null,null],[3,"Connectivity","","The `Connectivity` bitflag encode the topological distance between\ntwo particles in the molecule, i.e. the number of bonds between the\nparticles.",null,null],[3,"Molecule","","A molecule is the basic building block for a topology. It contains data\nabout the connectivity (bonds, angles, dihedrals) in the system.",null,null],[3,"EnergyEvaluator","","An helper struct to evaluate energy components of a system.",null,null],[3,"EnergyCache","","This is a cache for energy computation.",null,null],[3,"System","","The System type hold all the data about a simulated system.",null,null],[3,"Trajectory","","A Trajectory is a file containing one or more successive simulation steps",null,null],[3,"TrajectoryError","","Possible error when reading and writing to trajectories",null,null],[4,"CellShape","","The shape of a cell determine how we will be able to compute the periodic\nboundaries condition.",null,null],[13,"Infinite","","Infinite unit cell, with no boundaries",31,null],[13,"Orthorombic","","Orthorombic unit cell, with cuboid shape",31,null],[13,"Triclinic","","Triclinic unit cell, with arbitrary parallelepipedic shape",31,null],[5,"molecule_type","","Get the molecule type of the given `molecule` containing the `particles`.\nThis type can be used to identify all the molecules containing the same\nbonds and particles (see `System::molecule_type` for more information).",null,null],[5,"guess_bonds","","Guess the bonds in a system using Chemfiles algorithm",null,{"inputs":[{"name":"system"}],"output":{"name":"result"}}],[5,"read_molecule","","Read a the first molecule from the file at `path`. If no bond information\nexists in the file, bonds are guessed.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"add_element","","Add a new element in the elements list. The additional list is searched\nbefore the `PERIODIC_TABLE` array, so adding a new element here will\nmake it overwrite the real one.",32,{"inputs":[{"name":"elementdata"}],"output":null}],[11,"name","","Get the name of an element from it&#39;s symbol.",32,{"inputs":[{"name":"s"}],"output":{"name":"option"}}],[11,"mass","","Get the mass of an element from it&#39;s symbol.",32,{"inputs":[{"name":"s"}],"output":{"name":"option"}}],[11,"covalent","","Get the covalent radius of an element from it&#39;s symbol.",32,{"inputs":[{"name":"s"}],"output":{"name":"option"}}],[11,"vdw","","Get the Van der Waals radius of an element from it&#39;s symbol.",32,{"inputs":[{"name":"s"}],"output":{"name":"option"}}],[11,"clone","","",30,null],[11,"hash","","",30,null],[11,"partial_cmp","","",30,null],[11,"lt","","",30,null],[11,"le","","",30,null],[11,"gt","","",30,null],[11,"ge","","",30,null],[11,"cmp","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"fmt","","",30,null],[11,"default","","",30,{"inputs":[],"output":{"name":"particlekind"}}],[11,"fmt","","",30,null],[11,"clone","","",29,null],[11,"fmt","","",29,null],[11,"new","","Create a new `Particle` from a name",29,{"inputs":[{"name":"s"}],"output":{"name":"particle"}}],[11,"name","","Get the particle name",29,null],[11,"set_name","","Set the particle name to `name`",29,null],[11,"fmt","","",31,null],[11,"clone","","",31,null],[11,"eq","","",31,null],[11,"fmt","","",33,null],[11,"clone","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"unitcell"}}],[11,"new","","Create an infinite unit cell",33,{"inputs":[],"output":{"name":"unitcell"}}],[11,"ortho","","Create an orthorhombic unit cell, with side lengths `a, b, c`.",33,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"unitcell"}}],[11,"cubic","","Create a cubic unit cell, with side lengths `length, length, length`.",33,{"inputs":[{"name":"f64"}],"output":{"name":"unitcell"}}],[11,"triclinic","","Create a triclinic unit cell, with side lengths `a, b, c` and angles\n`alpha, beta, gamma`.",33,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"unitcell"}}],[11,"shape","","Get the cell shape",33,null],[11,"vect_a","","Get the first vector of the cell",33,null],[11,"a","","Get the first length of the cell (i.e. the norm of the first vector of\nthe cell)",33,null],[11,"vect_b","","Get the second vector of the cell",33,null],[11,"b","","Get the second length of the cell (i.e. the norm of the second vector of\nthe cell)",33,null],[11,"vect_c","","Get the third vector of the cell",33,null],[11,"c","","Get the third length of the cell (i.e. the norm of the third vector of\nthe cell)",33,null],[11,"lengths","","Get the distances between faces of the unit cell",33,null],[11,"alpha","","Get the first angle of the cell",33,null],[11,"beta","","Get the second angle of the cell",33,null],[11,"gamma","","Get the third angle of the cell",33,null],[11,"volume","","Get the volume angle of the cell",33,null],[11,"scale_mut","","Scale this unit cell in-place by multiplying the cell matrix by `factor`.",33,null],[11,"scale","","Scale this unit cell by multiplying the cell matrix by `s`, and return a\nnew scaled unit cell",33,null],[11,"reciprocal_vectors","","Get the reciprocal vectors of this unit cell",33,null],[11,"wrap_vector","","Wrap a vector in the unit cell, obeying the periodic boundary conditions.\nFor a cubic cell of side length `L`, this produce a vector with all\ncomponents in `[0, L)`.",33,null],[11,"vector_image","","Find the image of a vector in the unit cell, obeying the periodic\nboundary conditions. For a cubic cell of side length `L`, this produce a\nvector with all components in `[-L/2, L/2)`.",33,null],[11,"fractional","","Get the fractional representation of the `v` vector in this cell",33,null],[11,"cartesian","","Get the Cartesian representation of the fractional `v` vector in this\ncell",33,null],[11,"distance","","Periodic boundary conditions distance between the point `u` and the point `v`",33,null],[11,"angle","","Get the angle formed by the points at `a`, `b` and `c` using periodic\nboundary conditions.",33,null],[11,"angle_and_derivatives","","Get the angle formed by the points at `a`, `b` and `c` using periodic\nboundary conditions and its derivatives.",33,null],[11,"dihedral","","Get the dihedral angle formed by the points at `a`, `b`, `c`, `d` using\nperiodic boundary conditions.",33,null],[11,"dihedral_and_derivatives","","Get the dihedral angle and and its derivatives defined by the points at\n`a`, `b`, `c` and `d` using periodic boundary conditions.",33,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[11,"partial_cmp","","",34,null],[11,"lt","","",34,null],[11,"le","","",34,null],[11,"gt","","",34,null],[11,"ge","","",34,null],[11,"cmp","","",34,null],[11,"hash","","",34,null],[11,"fmt","","",34,null],[11,"empty","","Returns an empty set of flags.",34,{"inputs":[],"output":{"name":"connectivity"}}],[11,"all","","Returns the set containing all flags.",34,{"inputs":[],"output":{"name":"connectivity"}}],[11,"bits","","Returns the raw value of the flags currently stored.",34,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",34,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",34,{"inputs":[{"name":"u8"}],"output":{"name":"connectivity"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",34,null],[11,"is_all","","Returns `true` if all flags are currently set.",34,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",34,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",34,null],[11,"insert","","Inserts the specified flags in-place.",34,null],[11,"remove","","Removes the specified flags in-place.",34,null],[11,"toggle","","Toggles the specified flags in-place.",34,null],[11,"bitor","","Returns the union of the two sets of flags.",34,null],[11,"bitor_assign","","Adds the set of flags.",34,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",34,null],[11,"bitxor_assign","","Toggles the set of flags.",34,null],[11,"bitand","","Returns the intersection between the two sets of flags.",34,null],[11,"bitand_assign","","Disables all flags disabled in the set.",34,null],[11,"sub","","Returns the set difference of the two sets of flags.",34,null],[11,"sub_assign","","Disables all flags enabled in the set.",34,null],[11,"not","","Returns the complement of this set of flags.",34,null],[11,"extend","","",34,null],[11,"from_iter","","",34,{"inputs":[{"name":"t"}],"output":{"name":"connectivity"}}],[11,"default","","",34,{"inputs":[],"output":{"name":"connectivity"}}],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"partial_cmp","","",35,null],[11,"lt","","",35,null],[11,"le","","",35,null],[11,"gt","","",35,null],[11,"ge","","",35,null],[11,"cmp","","",35,null],[11,"hash","","",35,null],[11,"new","","Create a new Bond between the atoms at indexes `first` and `second`",35,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"bond"}}],[11,"i","","Get the first particle in the bond",35,null],[11,"j","","Get the second particle in the bond",35,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"hash","","",36,null],[11,"new","","Create a new Angle between the atoms at indexes `first`, `second` and `third`",36,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"angle"}}],[11,"i","","Get the first particle in the angle",36,null],[11,"j","","Get the second particle in the angle",36,null],[11,"k","","Get the third particle in the angle",36,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"hash","","",37,null],[11,"new","","Create a new Dihedral between the atoms at indexes `first`, `second`, `third` and `fourth`",37,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dihedral"}}],[11,"i","","Get the first particle in the dihedral angle",37,null],[11,"j","","Get the second particle in the dihedral angle",37,null],[11,"k","","Get the third particle in the dihedral angle",37,null],[11,"m","","Get the fourth particle in the dihedral angle",37,null],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"hash","","",38,null],[11,"new","","Create a new `Molecule` containing only the atom i",38,{"inputs":[{"name":"usize"}],"output":{"name":"molecule"}}],[11,"size","","Get the number of atoms in the molecule",38,null],[11,"first","","Get the first atom of this molecule",38,null],[11,"last","","Get the last atom of this molecule",38,null],[11,"contains","","Does this molecule contains the particle `i`",38,null],[11,"merge_with","","Merge this molecule with `other`. The first particle in `other` should\nbe the particle just after the last one in `self`.",38,null],[11,"translate_by","","Translate all indexes in this molecule by `delta`.",38,null],[11,"add_bond","","Add a bond between the particles at indexes `i` and `j`. These particles\nare assumed to be in the molecule",38,null],[11,"remove_particle","","Removes particle at index `i` and any associated bonds, angle or\ndihedral. This function also update the indexes for the\nbonds/angles/dihedral by remove 1 to all the values `&gt; i`",38,null],[11,"bonds","","Get the internal list of bonds",38,null],[11,"angles","","Get the internal list of angles",38,null],[11,"dihedrals","","Get the internal list of dihedrals",38,null],[11,"connectivity","","Get the connectivity between the particles `i` and `j`",38,null],[11,"iter","","Get an iterator over the particles in the molecule",38,null],[11,"into_iter","","",38,null],[11,"new","","Create a new `EnergyEvaluator` acting on the given `system`.",39,{"inputs":[{"name":"system"}],"output":{"name":"energyevaluator"}}],[11,"pair","","Compute the energy associated with the pair of particles `i, j` at\ndistance `r`",39,null],[11,"pairs","","Compute the energy of all the pairs in the system",39,null],[11,"bond","","Compute the energy associated with the bonded particles `i, j` at\ndistance `r`",39,null],[11,"bonds","","Compute the energy of all the bonds in the system",39,null],[11,"angle","","Compute the energy associated with the angle `i, j, k` at angle `theta`",39,null],[11,"angles","","Compute the energy of all the angles in the system",39,null],[11,"dihedral","","Compute the energy associated with the dihedral angle `i, j, k, m` at\nangle `phi`",39,null],[11,"dihedrals","","Compute the energy of all the dihedral angles in the system",39,null],[11,"coulomb","","Compute the energy of the electrostatic interactions",39,null],[11,"global","","Compute the energy of the global potentials",39,null],[11,"default","","",40,{"inputs":[],"output":{"name":"energycache"}}],[11,"new","","Create a new empty energy cache.",40,{"inputs":[],"output":{"name":"energycache"}}],[11,"init","","Initialize the cache to be used with `system`. After a call to this\nfunction, the cache is only usable with the same system. To change\nthe associated system, one must call this function again.",40,null],[11,"energy","","Get the cached energy",40,null],[11,"update","","Update the cache after a call to a `EnergyCache::*_cost` function or\n`EnergyCache::unused`.",40,null],[11,"unused","","This function should be called whenever the cache is not used, but one\nstill want it to be updated. Future call to `EnergyCache::update` will\nrecompute the full cache.",40,null],[11,"move_particles_cost","","Get the cost of moving the set of particles with indexes in `idxes` to\n`newpos`. This function DO NOT update the cache, the\n`update_particles_moved` function MUST be called if the particles are\neffectively moved.",40,null],[11,"clone","","",41,null],[11,"default","","",41,{"inputs":[],"output":{"name":"system"}}],[11,"new","","Create a new empty System",41,{"inputs":[],"output":{"name":"system"}}],[11,"from_cell","","Create an empty system with a specific UnitCell",41,{"inputs":[{"name":"unitcell"}],"output":{"name":"system"}}],[11,"step","","Get the current step of the system",41,null],[11,"increment_step","","Increment the system step",41,null],[11,"molecule_type","","Get the type of the molecule at index `molid`. This type is a hash of\nthe atoms names, and the set of bonds in the molecule. This means that\ntwo molecules will have the same type if and only if they contains the\nsame atoms and the same bonds, **in the same order**.",41,null],[11,"molecules_with_moltype","","Get a list of molecules with `moltype` molecule type.",41,null],[11,"are_in_same_molecule","","Check if the particles at indexes `i` and `j` are in the same molecule",41,null],[11,"molecules","","Get the list of molecules in the system.",41,null],[11,"molecule","","Get the molecule at index `id`",41,null],[11,"molid","","Get the index of the molecule containing the particle `i`",41,null],[11,"bond_distance","","Get the length of the shortest bond path to go from the particle `i` to\nthe particle `j`. If the particles are not in the same molecule, the\nlength is -1. Else, this length is 0 if `i == j`, 1 if there is a bond\nbetween `i` and `j`, etc.",41,null],[11,"remove_molecule","","Remove the molecule at index `i`",41,null],[11,"add_bond","","Add a bond between the particles at indexes `i` and `j`. The particles\nshould have been added to the system before calling this.",41,null],[11,"remove_particle","","Removes particle at index `i` and any associated bonds, angle or dihedral",41,null],[11,"add_particle","","Insert a particle at the end of the internal list",41,null],[11,"size","","Get the number of particles in this system",41,null],[11,"iter","","Get an iterator over the `Particle` in this system",41,null],[11,"iter_mut","","Get a mutable iterator over the `Particle` in this system",41,null],[11,"energy_evaluator","","Get an helper struct to evaluate the energy of this system.",41,null],[11,"interactions","","Access the interactions for this system",41,null],[11,"interactions_mut","","Access the interactions for this system in a mutable way",41,null],[11,"pair_potentials","","Get the list of pair potential acting between the particles at indexes\n`i` and `j`.",41,null],[11,"bond_potentials","","Get the list of bonded potential acting between the particles at indexes\n`i` and `j`.",41,null],[11,"angle_potentials","","Get the list of angle interaction acting between the particles at\nindexes `i`, `j` and `k`.",41,null],[11,"dihedral_potentials","","Get the list of dihedral angles interaction acting between the particles\nat indexes `i`, `j`, `k` and `m`.",41,null],[11,"cell","","Get a reference to  the system unit cell",41,null],[11,"cell_mut","","Get a mutable reference to  the system unit cell",41,null],[11,"set_cell","","Set the system unit cell",41,null],[11,"distance","","Get the distance between the particles at indexes `i` and `j`",41,null],[11,"nearest_image","","Get the vector between the nearest image of particle `j` with respect to\nparticle `i`.",41,null],[11,"angle","","Get the angle between the particles `i`, `j` and `k`",41,null],[11,"angle_and_derivatives","","Get the angle and the derivatives of the angle between the particles\n`i`, `j` and `k`",41,null],[11,"dihedral","","Get the dihedral angle between the particles `i`, `j`, `k` and `m`",41,null],[11,"dihedral_and_derivatives","","Get the dihedral angle and the derivatives of the dihedral angle\nbetween the particles `i`, `j`, `k` and `m`",41,null],[11,"kinetic_energy","","Get the kinetic energy of the system.",41,null],[11,"potential_energy","","Get the potential energy of the system.",41,null],[11,"total_energy","","Get the total energy of the system.",41,null],[11,"external_temperature","","Use an external temperature for all the system properties. Calling this\nwith `Some(temperature)` will replace all the computation of the\ntemperature from the velocities with the given values. Calling it with\n`None` will use the velocities.",41,null],[11,"temperature","","Get the temperature of the system.",41,null],[11,"volume","","Get the volume of the system.",41,null],[11,"virial","","Get the tensorial virial of the system.",41,null],[11,"pressure","","Get the pressure of the system from the virial equation, at the system\ninstantaneous temperature.",41,null],[11,"stress","","Get the stress tensor of the system from the virial equation.",41,null],[11,"forces","","Get the forces acting on all the particles in the system",41,null],[11,"index","","",41,null],[11,"index_mut","","",41,null],[11,"fmt","","",42,null],[11,"from","","",42,{"inputs":[{"name":"error"}],"output":{"name":"trajectoryerror"}}],[11,"fmt","","",42,null],[11,"description","","",42,null],[11,"to_chemfiles","","",29,null],[11,"to_chemfiles","","",33,null],[11,"to_chemfiles","","",41,null],[11,"open","","Open an existing file at `path` for reading.",43,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Create a new file at `path` for writing, and overwrite any existing file.",43,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"read","","Read the next step of the trajectory",43,null],[11,"read_guess_bonds","","Read the next step of the trajectory, and guess the bonds of the\nresulting System.",43,null],[11,"write","","Write the system to the trajectory.",43,null],[11,"as_chemfiles","","Get access to the Chemfiles trajectory, and the associated features",43,null],[0,"veloc","","This module provides some ways to initialize the velocities in a `System`",null,null],[3,"BoltzmannVelocities","lumol::sys::veloc","Initialize the velocities from a Boltzmann distribution.",null,null],[3,"UniformVelocities","","Initialize the velocities from an uniform distribution.",null,null],[5,"scale","","Scale all velocities in the `System` such that the `system` temperature\nis `temperature`.",null,{"inputs":[{"name":"system"},{"name":"f64"}],"output":null}],[8,"InitVelocities","","A method to initialize the velocities of a system.",null,null],[10,"init","","Initialize the velocities of the system.",44,null],[10,"seed","","Set the seed of the random number generator. The default seed is 42.",44,null],[11,"new","","Create a new `BoltzmannVelocities` at the given `temperature`.",45,{"inputs":[{"name":"f64"}],"output":{"name":"boltzmannvelocities"}}],[11,"init","","",45,null],[11,"seed","","",45,null],[11,"new","","Create a new `UniformVelocities` at the given `temperature`.",46,{"inputs":[{"name":"f64"}],"output":{"name":"uniformvelocities"}}],[11,"init","","",46,null],[11,"seed","","",46,null],[0,"compute","lumol::sys","Computing properties of a system",null,null],[3,"Forces","lumol::sys::compute","Compute all the forces acting on the system, and return a vector of\nforce acting on each particles",null,null],[3,"PotentialEnergy","","Compute the potential energy of the system",null,null],[3,"KineticEnergy","","Compute the kinetic energy of the system",null,null],[3,"TotalEnergy","","Compute the total energy of the system",null,null],[3,"Temperature","","Compute the instantaneous temperature of the system",null,null],[3,"Volume","","Compute the volume of the system",null,null],[3,"Virial","","Compute the virial tensor of the system, defined by\n$$ W = \\sum_i \\sum_{j &gt; i} \\vec r_{ij} \\otimes \\vec f_{ij} $$",null,null],[3,"PressureAtTemperature","","Compute the pressure of the system from the virial equation, at the given\ntemperature. This pressure is given by the following formula:\n$$ p = \\frac{N k_B T}{V} + \\frac{1}{3V} \\sum_i \\vec f_i \\cdot \\vec r_i $$",null,null],[12,"temperature","","Temperature for the pressure computation",47,null],[3,"StressAtTemperature","","Compute the stress tensor of the system from the virial equation, at the\ngiven temperature. The stress tensor is defined by\n$$ \\sigma = \\sigma = \\frac{1}{V} (\\sum_i m_i v_i \\otimes v_i + \\sum_i \\sum_{j &gt; i} \\vec r_{ij} \\otimes \\vec f_{ij}) $$\nbut here the kinetic energy term is replaced by it average at the given\ntemperature.",null,null],[12,"temperature","","Temperature for the stress tensor computation",48,null],[3,"Stress","","Compute the stress tensor of the system, defined by:\n$$ \\sigma = \\frac{1}{V} (\\sum_i m_i v_i \\otimes v_i + \\sum_i \\sum_{j &gt; i} \\vec r_{ij} \\otimes \\vec f_{ij}) $$",null,null],[3,"Pressure","","Compute the virial pressure of the system. This pressure is given by the\nfollowing formula:\n$$ p = \\frac{N k_B T}{V} + \\frac{1}{3V} \\sum_i \\vec f_i \\cdot \\vec r_i $$",null,null],[8,"Compute","","The compute trait allow to compute properties of a system, without\nmodifying this system. The Output type is the type of the computed\nproperty.",null,null],[16,"Output","","The data type of the property",49,null],[10,"compute","","Compute the property",49,null],[11,"compute","","",50,null],[11,"compute","","",51,null],[11,"compute","","",52,null],[11,"compute","","",53,null],[11,"compute","","",54,null],[11,"compute","","",55,null],[11,"compute","","",56,null],[11,"compute","","",47,null],[11,"compute","","",48,null],[11,"compute","","",57,null],[11,"compute","","",58,null],[6,"Permutations","lumol::sys","Particles permutations:. Indexes are given in the `(old, new)` form.",null,null],[17,"CONNECT_12","","The particles are separated by one bond",null,null],[17,"CONNECT_13","","The particles are separated by two bonds",null,null],[17,"CONNECT_14","","The particles are separated by three bonds",null,null],[17,"CONNECT_FAR","","The particles are separated by more than three bonds",null,null],[8,"ToChemfiles","","Convert Lumol types to Chemfiles types",null,null],[16,"Output","","Output type",59,null],[10,"to_chemfiles","","Conversion function",59,null],[0,"sim","lumol","Types and traits for representing simulation algorithms",null,null],[3,"Simulation","lumol::sim","The Simulation struct holds all the needed algorithms for running the\nsimulation. It should be use together with a `System` to perform the\nsimulation.",null,null],[3,"MolecularDynamics","","Molecular Dynamics propagator for the simulation.",null,null],[3,"MonteCarlo","","Metropolis Monte-Carlo propagator",null,null],[3,"SteepestDescent","","Steepest gradient descent for energy minimization.",null,null],[4,"TemperatureStrategy","","Possible temperature computation strategies. Different propagators needs\ndifferent ways to compute the temperature: Monte-Carlo temperature is a\nconstant of the simulation, whereas for molecular dynamics we use the\ninstantaneous velocities.",null,null],[13,"None","","No specific strategy, use whatever strategy was already in use.",60,null],[13,"Velocities","","Use the instantaneous velocities to compute the temperature",60,null],[13,"External","","Use a fixed external temperature",60,null],[0,"md","","Molecular dynamics algorithms.",null,null],[3,"VelocityVerlet","lumol::sim::md","Velocity-Verlet integrator. This one is reversible and symplectic.",null,null],[3,"Verlet","","Verlet integrator. This one is reversible and symplectic.",null,null],[3,"LeapFrog","","Leap-frog integrator. This one is reversible and symplectic.",null,null],[3,"BerendsenBarostat","","Berendsen barostat integrator based on velocity-Verlet. This one neither\nreversible nor symplectic.",null,null],[3,"AnisoBerendsenBarostat","","Anisotropic Berendsen barostat integrator based on velocity-Verlet. This one\nneither reversible nor symplectic.",null,null],[3,"RescaleThermostat","","Velocity rescaling thermostat.",null,null],[3,"BerendsenThermostat","","Berendsen thermostat.",null,null],[3,"RemoveTranslation","","Remove global translation from the system",null,null],[3,"RemoveRotation","","Remove global rotation from the system",null,null],[3,"MolecularDynamics","","Molecular Dynamics propagator for the simulation.",null,null],[11,"new","","Create a new integrator with a timestep of `timestep`.",61,{"inputs":[{"name":"f64"}],"output":{"name":"velocityverlet"}}],[11,"setup","","",61,null],[11,"integrate","","",61,null],[11,"new","","Create a new integrator with a timestep of `timestep`.",62,{"inputs":[{"name":"f64"}],"output":{"name":"verlet"}}],[11,"setup","","",62,null],[11,"integrate","","",62,null],[11,"new","","Create a new integrator with a timestep of `timestep`.",63,{"inputs":[{"name":"f64"}],"output":{"name":"leapfrog"}}],[11,"setup","","",63,null],[11,"integrate","","",63,null],[11,"new","","Create a new Berendsen barostat with an integration timestep of\n`timestep`, and a target pressure of `pressure` and the barostat time\nscale `tau`.",64,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"berendsenbarostat"}}],[11,"setup","","",64,null],[11,"integrate","","",64,null],[11,"new","","Create a new anisotropic Berendsen barostat with an integration timestep\nof `timestep`, and a target stress matrix of `stress` and the barostat\ntime scale `tau`.",65,{"inputs":[{"name":"f64"},{"name":"matrix3"},{"name":"f64"}],"output":{"name":"anisoberendsenbarostat"}}],[11,"hydrostatic","","Create a new anisotropic Berendsen barostat with an integration timestep\nof `timestep`, using an hydrostatic stress matrix corresponding to the\npressure `pressure` and the barostat time scale `tau`.",65,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"anisoberendsenbarostat"}}],[11,"setup","","",65,null],[11,"integrate","","",65,null],[11,"new","","Create a new `RescaleThermostat` acting at temperature `temperature`, with a\ntolerance of `5% * temperature`.",66,{"inputs":[{"name":"f64"}],"output":{"name":"rescalethermostat"}}],[11,"with_tolerance","","Create a new `RescaleThermostat` acting at temperature `T`, with a\ntolerance of `tol`. For rescaling all the steps, use `tol = 0`.",66,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"rescalethermostat"}}],[11,"control","","",66,null],[11,"new","","Create a new `BerendsenThermostat` acting at temperature `T`, with a\ntimestep of `tau` times the integrator timestep.",67,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"berendsenthermostat"}}],[11,"control","","",67,null],[11,"control","","",68,null],[11,"control","","",69,null],[11,"new","lumol::sim","Create a new `MolecularDynamics` propagator using a `VelocityVerlet`\nintegrator.",70,{"inputs":[{"name":"f64"}],"output":{"name":"moleculardynamics"}}],[11,"from_integrator","","Create a new `MolecularDynamics` propagator using the specified\n`integrator`.",70,{"inputs":[{"name":"box"}],"output":{"name":"moleculardynamics"}}],[11,"add_control","","Add a control algorithm to the internal list of controls.",70,null],[11,"set_thermostat","","Set the thermostat to use with this simulation",70,null],[11,"temperature_strategy","","",70,null],[11,"setup","","",70,null],[11,"propagate","","",70,null],[11,"finish","","",70,null],[8,"Integrator","lumol::sim::md","The `Integrator` trait define integrator interface for molecular dynamics.\nAn integrator is an algorithm responsible for propagating the equations of\nmotion in the system.",null,null],[11,"setup","","Setup the integrator. This function is called once by every simulation\nrun.",71,null],[10,"integrate","","Integrate the equations of motion. This is called at every step of the\nsimulation.",71,null],[8,"Control","","Trait for controlling some parameters in a system during a simulation.",null,null],[11,"setup","","Function called once at the beginning of the simulation, which allow\nfor some setup of the control algorithm if needed.",72,null],[10,"control","","Do your job, control algorithm!",72,null],[11,"finish","","Function called once at the end of the simulation.",72,null],[8,"Thermostat","","Trait for controls usable as thermostats",null,null],[0,"mc","lumol::sim","Monte-Carlo Metropolis algorithms",null,null],[3,"MonteCarlo","lumol::sim::mc","Metropolis Monte-Carlo propagator",null,null],[3,"MoveCounter","","This struct keeps track of the number of times a move was called\nand how often it was accepted.",null,null],[12,"ncalled","","Count the total number of times the move was called.",73,null],[12,"naccepted","","Count the number of times the move was accepted since the last update.",73,null],[12,"nattempted","","Count the number of times the move was called since the last update.",73,null],[3,"Translate","","Monte-Carlo move for translating a molecule",null,null],[3,"Rotate","","Monte-Carlo move for rotating a rigid molecule",null,null],[11,"new","lumol::sim","Create a new Monte-Carlo propagator at temperature `T`.",74,{"inputs":[{"name":"f64"}],"output":{"name":"montecarlo"}}],[11,"from_rng","","Create a Monte-Carlo propagator at temperature `T`, using the `rng`\nrandom number generator.",74,{"inputs":[{"name":"f64"},{"name":"box"}],"output":{"name":"montecarlo"}}],[11,"add","","Add the `mcmove` Monte-Carlo move to this propagator, with frequency\n`frequency`. All calls to this function should happen before any\nsimulation run.",74,null],[11,"add_move_with_acceptance","","Add the `mcmove` Monte-Carlo move to the propagator.\n`frequency` describes how frequent a move is called, `target_acceptance`\nis the desired acceptance ratio of the move.",74,null],[11,"set_amplitude_update_frequency","","Set the number of times a move has to be called before its amplitude\nis updated. This value is applied to all moves.",74,null],[11,"temperature","","Get the temperature of the simulation",74,null],[11,"set_temperature","","Set the temperature of the simulation",74,null],[11,"temperature_strategy","","",74,null],[11,"setup","","",74,null],[11,"propagate","","",74,null],[11,"new","lumol::sim::mc","Create a new counter for the move, initializing all counts to zero and\nsetting the `target_acceptance`.",73,{"inputs":[{"name":"option"}],"output":{"name":"movecounter"}}],[11,"set_acceptance","","Set the target acceptance for the move counter.",73,null],[11,"compute_scaling_factor","","Compute a scaling factor according to the desired acceptance.",73,null],[11,"default","","",73,{"inputs":[],"output":{"name":"movecounter"}}],[11,"new","","Create a new `Translate` move, with maximum displacement of `dr`.\nTranslating all the molecules in the system.",75,{"inputs":[{"name":"f64"}],"output":{"name":"translate"}}],[11,"with_moltype","","Create a new `Translate` move, with maximum displacement of `dr`.\nTranslating only molecules with `moltype` type.",75,{"inputs":[{"name":"f64"},{"name":"u64"}],"output":{"name":"translate"}}],[11,"default","","",75,{"inputs":[],"output":{"name":"translate"}}],[11,"describe","","",75,null],[11,"prepare","","",75,null],[11,"cost","","",75,null],[11,"apply","","",75,null],[11,"restore","","",75,null],[11,"update_amplitude","","",75,null],[11,"new","","Create a new `Rotate` move, with maximum angular displacement of `theta`,\nrotating all the molecules in the system.",76,{"inputs":[{"name":"f64"}],"output":{"name":"rotate"}}],[11,"with_moltype","","Create a new `Rotate` move, with maximum angular displacement of `theta`,\nrotating only molecules with `moltype` type.",76,{"inputs":[{"name":"f64"},{"name":"u64"}],"output":{"name":"rotate"}}],[11,"default","","",76,{"inputs":[],"output":{"name":"rotate"}}],[11,"describe","","",76,null],[11,"prepare","","",76,null],[11,"cost","","",76,null],[11,"apply","","",76,null],[11,"restore","","",76,null],[11,"update_amplitude","","",76,null],[8,"MCMove","","The `MCMove` trait correspond to the set of methods used in Monte-Carlo\nsimulations.",null,null],[10,"describe","","Give a short description of this move",77,null],[10,"prepare","","Prepare the move by selecting the particles to move, and the parameters\nof the move. The `rng` random number generator should be used to\ngenerate the parameters of the move.",77,null],[10,"cost","","Get the cost of performing this move on `system`. For example in\nsimple NVT simulations, this cost is the energetic difference between\nthe new and the old state times beta. The cost must be dimmensionless.",77,null],[10,"apply","","Apply the move, if it has not already been done in `prepare`.",77,null],[10,"restore","","Restore the system to it&#39;s initial state if it has been changed in\n`prepare`.",77,null],[10,"update_amplitude","","Update the sample range for displacements.",77,null],[0,"min","lumol::sim","Energy minimization algorithms",null,null],[3,"SteepestDescent","lumol::sim::min","Steepest gradient descent for energy minimization.",null,null],[11,"default","lumol::sim","",78,{"inputs":[],"output":{"name":"steepestdescent"}}],[11,"new","","Create a `SteepestDescent` with sensible default values for energy and\nforce convergence criteria.",78,{"inputs":[],"output":{"name":"steepestdescent"}}],[11,"with_criteria","","Create a new `SteepestDescent` with the given `force` and `energy`\nconvergence criterion.",78,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"steepestdescent"}}],[11,"converged","","Has the minimization converged so far ?",78,null],[11,"temperature_strategy","","",78,null],[11,"setup","","",78,null],[11,"propagate","","",78,null],[11,"new","","Create a new Simulation from a Propagator.",79,{"inputs":[{"name":"box"}],"output":{"name":"simulation"}}],[11,"run","","Run the simulation on System for `nsteps` steps.",79,null],[11,"add_output","","Add a new `Output` algorithm in the outputs list",79,null],[11,"add_output_with_frequency","","Add a new `Output` algorithm in the outputs list, which will be used\nat the given frequency. The output will be used every time the system\nstep matches this frequency.",79,null],[8,"Propagator","","The propagator trait is the main algorithm of a simulation, i.e. the one\nwhich update the system. The main function here is `propagate`, which\nshould propagate the simulation for one step.",null,null],[11,"setup","","Setup code, preparing all the meta-information needed about the\nsimulation.",80,null],[10,"temperature_strategy","","Get the temperature computation strategy for this propagator",80,null],[10,"propagate","","Propagate the system for one simulation step.",80,null],[11,"finish","","Finish the simulation, and maybe output some information about it",80,null],[0,"out","lumol","Saving properties of a system during a simulation",null,null],[3,"TrajectoryOutput","lumol::out","The `TrajectoryOutput` allow to write the trajectory of the system to a\nfile, using any format supported by the [Chemfiles][chemfiles] library.",null,null],[3,"CellOutput","","The `CellOutput` write all the components of a cell to a file . The columns\nin the file contains the following values: `A B C α β γ`.",null,null],[3,"EnergyOutput","","The `EnergyOutput` write the energy of the system to a text file, organized\nas: `PotentialEnergy     KineticEnergy     TotalEnergy`.",null,null],[3,"PropertiesOutput","","The `PropertiesOutput` write various physical properties of the system to\na file. These properties are:",null,null],[8,"Output","","The `Output` trait define the interface for all the quantities outputted by\nthe simulation during the run. An Output can be a text or a binary data\nfile, an image, a text log, …",null,null],[11,"setup","","Function called once at the beginning of the simulation, which allow\nfor some setup of the output if needed.",81,null],[10,"write","","Write the output from the system.",81,null],[11,"finish","","Function called once at the end of the simulation.",81,null],[11,"new","","Create a new `TrajectoryOutput` writing to `filename`. The file is\nreplaced if it already exists.",82,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"write","","",82,null],[11,"new","","Create a new `CellOutput` writing to `filename`. The file is replaced if\nit already exists.",83,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"setup","","",83,null],[11,"write","","",83,null],[11,"new","","Create a new `EnergyOutput` writing to `filename`. The file is replaced\nif it already exists.",84,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"setup","","",84,null],[11,"write","","",84,null],[11,"new","","Create a new `PropertiesOutput` writing to `filename`. The file is replaced\nif it already exists.",85,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"setup","","",85,null],[11,"write","","",85,null],[11,"max","lumol","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,null],[11,"cmp","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"setup","lumol::sim","Setup code, preparing all the meta-information needed about the\nsimulation.",80,null],[11,"finish","","Finish the simulation, and maybe output some information about it",80,null],[11,"setup","lumol::sim::md","Setup the integrator. This function is called once by every simulation\nrun.",71,null],[11,"setup","","Function called once at the beginning of the simulation, which allow\nfor some setup of the control algorithm if needed.",72,null],[11,"finish","","Function called once at the end of the simulation.",72,null]],"paths":[[4,"LogLevel"],[3,"Logger"],[4,"ParseError"],[8,"One"],[8,"Zero"],[3,"Vector3D"],[3,"Matrix3"],[3,"Complex"],[3,"Array2"],[3,"Array3"],[3,"LennardJones"],[3,"Harmonic"],[3,"Torsion"],[3,"RestrictionInfo"],[4,"PairRestriction"],[3,"NullPotential"],[3,"CosineHarmonic"],[3,"TableComputation"],[3,"Wolf"],[3,"Ewald"],[3,"PairInteraction"],[8,"Potential"],[8,"PairPotential"],[8,"BondPotential"],[8,"Computation"],[8,"GlobalPotential"],[8,"GlobalCache"],[8,"CoulombicPotential"],[3,"ElementData"],[3,"Particle"],[3,"ParticleKind"],[4,"CellShape"],[3,"PeriodicTable"],[3,"UnitCell"],[3,"Connectivity"],[3,"Bond"],[3,"Angle"],[3,"Dihedral"],[3,"Molecule"],[3,"EnergyEvaluator"],[3,"EnergyCache"],[3,"System"],[3,"TrajectoryError"],[3,"Trajectory"],[8,"InitVelocities"],[3,"BoltzmannVelocities"],[3,"UniformVelocities"],[3,"PressureAtTemperature"],[3,"StressAtTemperature"],[8,"Compute"],[3,"Forces"],[3,"PotentialEnergy"],[3,"KineticEnergy"],[3,"TotalEnergy"],[3,"Temperature"],[3,"Volume"],[3,"Virial"],[3,"Stress"],[3,"Pressure"],[8,"ToChemfiles"],[4,"TemperatureStrategy"],[3,"VelocityVerlet"],[3,"Verlet"],[3,"LeapFrog"],[3,"BerendsenBarostat"],[3,"AnisoBerendsenBarostat"],[3,"RescaleThermostat"],[3,"BerendsenThermostat"],[3,"RemoveTranslation"],[3,"RemoveRotation"],[3,"MolecularDynamics"],[8,"Integrator"],[8,"Control"],[3,"MoveCounter"],[3,"MonteCarlo"],[3,"Translate"],[3,"Rotate"],[8,"MCMove"],[3,"SteepestDescent"],[3,"Simulation"],[8,"Propagator"],[8,"Output"],[3,"TrajectoryOutput"],[3,"CellOutput"],[3,"EnergyOutput"],[3,"PropertiesOutput"]]};
searchIndex["ndarray"] = {"doc":"The `ndarray` crate provides an N-dimensional container for general elements\nand for numerics.","items":[[3,"Axis","ndarray","An axis index.",null,null],[12,"0","","",0,null],[3,"Indexes","","An iterator over the indexes of an array shape.",null,null],[3,"ShapeError","","An error related to array shape or layout.",null,null],[3,"Si","","A slice, a description of a range of an array axis.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[12,"2","","",1,null],[3,"InnerIter","","An iterator that traverses over all dimensions but the innermost,\nand yields each inner row.",null,null],[3,"InnerIterMut","","An iterator that traverses over all dimensions but the innermost,\nand yields each inner row (mutable).",null,null],[3,"AxisIter","","An iterator that traverses over an axis and\nand yields each subview.",null,null],[3,"AxisIterMut","","An iterator that traverses over an axis and\nand yields each subview (mutable)",null,null],[3,"AxisChunksIter","","An iterator that traverses over the specified axis\nand yields views of the specified size on this axis.",null,null],[3,"AxisChunksIterMut","","An iterator that traverses over the specified axis\nand yields mutable views of the specified size on this axis.",null,null],[3,"ArrayBase","","An *N*-dimensional array.",null,null],[3,"ViewRepr","","Array view’s representation.",null,null],[3,"Elements","","An iterator over the elements of an array.",null,null],[3,"ElementsMut","","An iterator over the elements of an array (mutable).",null,null],[3,"Indexed","","An iterator over the indexes and elements of an array.",null,null],[3,"IndexedMut","","An iterator over the indexes and elements of an array (mutable).",null,null],[3,"Shape","","A contiguous array shape of n dimensions.",null,null],[3,"StrideShape","","An array shape of n dimensions c-order, f-order or custom strides.",null,null],[4,"ErrorKind","","Error code for an error related to array shape or layout.",null,null],[13,"IncompatibleShape","","incompatible shape",2,null],[13,"IncompatibleLayout","","incompatible memory layout",2,null],[13,"RangeLimited","","the shape does not fit inside type limits",2,null],[13,"OutOfBounds","","out of bounds indexing",2,null],[13,"Unsupported","","aliasing array elements",2,null],[5,"stack","","Stack arrays along the given axis.",null,null],[5,"arr0","","Create a zero-dimensional array with the element `x`.",null,{"inputs":[{"name":"a"}],"output":{"name":"array0"}}],[5,"arr1","","Create a one-dimensional array with elements from `xs`.",null,null],[5,"rcarr1","","Create a one-dimensional array with elements from `xs`.",null,null],[5,"aview0","","Create a zero-dimensional array view borrowing `x`.",null,{"inputs":[{"name":"a"}],"output":{"name":"arrayview0"}}],[5,"aview1","","Create a one-dimensional array view with elements borrowing `xs`.",null,null],[5,"aview2","","Create a two-dimensional array view with elements borrowing `xs`.",null,null],[5,"aview_mut1","","Create a one-dimensional read-write array view with elements borrowing `xs`.",null,null],[5,"arr2","","Create a two-dimensional array with elements from `xs`.",null,null],[5,"rcarr2","","Create a two-dimensional array with elements from `xs`.",null,null],[5,"arr3","","Create a three-dimensional array with elements from `xs`.",null,null],[5,"rcarr3","","Create a three-dimensional array with elements from `xs`.",null,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"eq","","",3,null],[11,"from_iter","","",3,{"inputs":[{"name":"i"}],"output":{"name":"arraybase"}}],[11,"hash","","",3,null],[11,"from","","",3,{"inputs":[{"name":"slice"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"arraybase"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"slice"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"arraybase"}],"output":{"name":"self"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"_data_slice","","",4,null],[11,"clone_with_ptr","","",4,null],[11,"_data_slice","","",4,null],[11,"cmp","","",0,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"axis","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"clone","","",0,null],[11,"clone","","",5,null],[11,"new","","Create an iterator over the array shape `dim`.",5,{"inputs":[{"name":"d"}],"output":{"name":"indexes"}}],[11,"next","","",5,null],[11,"size_hint","","",5,null],[11,"clone","","",6,null],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"fold","","",6,null],[11,"next_back","","",6,null],[11,"next","","",7,null],[11,"size_hint","","",7,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"fold","","",8,null],[11,"next_back","","",8,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"split_at","","Split the iterator at index, yielding two disjoint iterators.",12,null],[11,"clone","","",12,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"next_back","","",12,null],[11,"split_at","","Split the iterator at index, yielding two disjoint iterators.",13,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"next_back","","",13,null],[11,"next","","",14,null],[11,"size_hint","","",14,null],[11,"next_back","","",14,null],[11,"next","","",15,null],[11,"size_hint","","",15,null],[11,"next_back","","",15,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[11,"from","","",1,{"inputs":[{"name":"range"}],"output":{"name":"si"}}],[11,"from","","",1,{"inputs":[{"name":"rangefrom"}],"output":{"name":"si"}}],[11,"from","","",1,{"inputs":[{"name":"rangeto"}],"output":{"name":"si"}}],[11,"from","","",1,{"inputs":[{"name":"rangefull"}],"output":{"name":"si"}}],[11,"step","","",1,null],[11,"clone","","",1,null],[11,"clone","","",16,null],[11,"kind","","Return the `ErrorKind` of this error.",16,null],[11,"from_kind","","Create a new `ShapeError`",16,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"eq","","",16,null],[11,"description","","",16,null],[11,"fmt","","",16,null],[11,"fmt","","",16,null],[11,"from","","",17,{"inputs":[{"name":"d"}],"output":{"name":"self"}}],[11,"from","","",18,{"inputs":[{"name":"d"}],"output":{"name":"self"}}],[11,"from","","",18,{"inputs":[{"name":"shape"}],"output":{"name":"self"}}],[11,"f","","",17,null],[11,"set_f","","",17,null],[11,"strides","","",17,null],[0,"prelude","","ndarray prelude.",null,null],[11,"clone","","",3,null],[11,"from_vec","","Create a one-dimensional array from a vector (no copying needed).",3,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"from_iter","","Create a one-dimensional array from an iterable.",3,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"linspace","","Create a one-dimensional array from the inclusive interval\n`[start, end]` with `n` elements. `F` must be a floating point type.",3,{"inputs":[{"name":"f"},{"name":"f"},{"name":"usize"}],"output":{"name":"self"}}],[11,"range","","Create a one-dimensional array from the half-open interval\n`[start, end)` with elements spaced by `step`. `F` must be a floating point type.",3,{"inputs":[{"name":"f"},{"name":"f"},{"name":"f"}],"output":{"name":"self"}}],[11,"eye","","Create an identity matrix of size `n` (square 2D array).",3,{"inputs":[{"name":"ix"}],"output":{"name":"self"}}],[11,"from_elem","","Create an array with copies of `elem`, shape `shape`.",3,{"inputs":[{"name":"sh"},{"name":"a"}],"output":{"name":"self"}}],[11,"zeros","","Create an array with zeros, shape `shape`.",3,{"inputs":[{"name":"sh"}],"output":{"name":"self"}}],[11,"default","","Create an array with default values, shape `shape`",3,{"inputs":[{"name":"sh"}],"output":{"name":"self"}}],[11,"from_shape_fn","","Create an array with values created by the function `f`.",3,{"inputs":[{"name":"sh"},{"name":"f"}],"output":{"name":"self"}}],[11,"from_shape_vec","","Create an array with the given shape from a vector. (No cloning of\nelements needed.)",3,{"inputs":[{"name":"sh"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_shape_vec_unchecked","","Create an array from a vector and interpret it according to the\nprovided dimensions and strides. (No cloning of elements needed.)",3,{"inputs":[{"name":"sh"},{"name":"vec"}],"output":{"name":"self"}}],[11,"len","","Return the total number of elements in the array.",3,null],[11,"dim","","Return the shape of the array.",3,null],[11,"shape","","Return the shape of the array as a slice.",3,null],[11,"strides","","Return the strides of the array",3,null],[11,"ndim","","Return the number of dimensions (axes) in the array",3,null],[11,"view","","Return a read-only view of the array",3,null],[11,"view_mut","","Return a read-write view of the array",3,null],[11,"to_owned","","Return an uniquely owned copy of the array",3,null],[11,"to_shared","","Return a shared ownership (copy on write) array.",3,null],[11,"into_shared","","Turn the array into a shared ownership (copy on write) array,\nwithout any copying.",3,null],[11,"iter","","Return an iterator of references to the elements of the array.",3,null],[11,"iter_mut","","Return an iterator of mutable references to the elements of the array.",3,null],[11,"indexed_iter","","Return an iterator of indexes and references to the elements of the array.",3,null],[11,"indexed_iter_mut","","Return an iterator of indexes and mutable references to the elements of the array.",3,null],[11,"slice","","Return a sliced array.",3,null],[11,"slice_mut","","Return a sliced read-write view of the array.",3,null],[11,"islice","","Slice the array’s view in place.",3,null],[11,"get","","Return a reference to the element at `index`, or return `None`\nif the index is out of bounds.",3,null],[11,"get_mut","","Return a mutable reference to the element at `index`, or return `None`\nif the index is out of bounds.",3,null],[11,"uget","","Perform *unchecked* array indexing.",3,null],[11,"uget_mut","","Perform *unchecked* array indexing.",3,null],[11,"swap","","Swap elements at indices `index1` and `index2`.",3,null],[11,"subview","","Along `axis`, select the subview `index` and return a\nview with that axis removed.",3,null],[11,"subview_mut","","Along `axis`, select the subview `index` and return a read-write view\nwith the axis removed.",3,null],[11,"isubview","","Collapse dimension `axis` into length one,\nand select the subview of `index` along that axis.",3,null],[11,"into_subview","","Along `axis`, select the subview `index` and return `self`\nwith that axis removed.",3,null],[11,"select","","Along `axis`, select arbitrary subviews corresponding to `indices`\n and and copy them into a new array.",3,null],[11,"inner_iter","","Return an iterator that traverses over all dimensions but the innermost,\nand yields each inner row.",3,null],[11,"inner_iter_mut","","Return an iterator that traverses over all dimensions but the innermost,\nand yields each inner row.",3,null],[11,"outer_iter","","Return an iterator that traverses over the outermost dimension\nand yields each subview.",3,null],[11,"outer_iter_mut","","Return an iterator that traverses over the outermost dimension\nand yields each subview.",3,null],[11,"axis_iter","","Return an iterator that traverses over `axis`\nand yields each subview along it.",3,null],[11,"axis_iter_mut","","Return an iterator that traverses over `axis`\nand yields each mutable subview along it.",3,null],[11,"axis_chunks_iter","","Return an iterator that traverses over `axis` by chunks of `size`,\nyielding non-overlapping views along that axis.",3,null],[11,"axis_chunks_iter_mut","","Return an iterator that traverses over `axis` by chunks of `size`,\nyielding non-overlapping read-write views along that axis.",3,null],[11,"diag","","Return an view of the diagonal elements of the array.",3,null],[11,"diag_mut","","Return a read-write view over the diagonal elements of the array.",3,null],[11,"into_diag","","Return the diagonal as a one-dimensional array.",3,null],[11,"is_standard_layout","","Return `true` if the array data is laid out in contiguous “C order” in\nmemory (where the last index is the most rapidly varying).",3,null],[11,"as_ptr","","Return a pointer to the first element in the array.",3,null],[11,"as_mut_ptr","","Return a mutable pointer to the first element in the array.",3,null],[11,"as_slice","","Return the array’s data as a slice, if it is contiguous and in standard order.\nReturn `None` otherwise.",3,null],[11,"as_slice_mut","","Return the array’s data as a slice, if it is contiguous and in standard order.\nReturn `None` otherwise.",3,null],[11,"as_slice_memory_order","","Return the array’s data as a slice if it is contiguous,\nreturn `None` otherwise.",3,null],[11,"as_slice_memory_order_mut","","Return the array’s data as a slice if it is contiguous,\nreturn `None` otherwise.",3,null],[11,"reshape","","Transform the array into `shape`; any shape with the same number of\nelements is accepted.",3,null],[11,"into_shape","","Transform the array into `shape`; any shape with the same number of\nelements is accepted, but the source array or view must be\ncontiguous, otherwise we cannot rearrange the dimension.",3,null],[11,"broadcast","","Act like a larger size and/or shape array by *broadcasting*\ninto a larger shape, if possible.",3,null],[11,"swap_axes","","Swap axes `ax` and `bx`.",3,null],[11,"reversed_axes","","Transpose the array by reversing axes.",3,null],[11,"t","","Return a transposed view of the array.",3,null],[11,"assign","","Perform an elementwise assigment to `self` from `rhs`.",3,null],[11,"assign_scalar","","Perform an elementwise assigment to `self` from scalar `x`.",3,null],[11,"zip_mut_with","","Traverse two arrays in unspecified order, in lock step,\ncalling the closure `f` on each element pair.",3,null],[11,"fold","","Traverse the array elements and apply a fold,\nreturning the resulting value.",3,null],[11,"map","","Call `f` by reference on each element and create a new array\nwith the new values.",3,null],[11,"mapv","","Call `f` by **v**alue on each element and create a new array\nwith the new values.",3,null],[11,"mapv_into","","Call `f` by **v**alue on each element, update the array with the new values\nand return it.",3,null],[11,"map_inplace","","Modify the array in place by calling `f` by mutable reference on each element.",3,null],[11,"mapv_inplace","","Modify the array in place by calling `f` by **v**alue on each element.\nThe array is updated with the new values.",3,null],[11,"visit","","Visit each element in the array by calling `f` by reference\non each element.",3,null],[11,"fold_axis","","Fold along an axis.",3,null],[11,"map_axis","","Reduce the values along an axis into just one value, producing a new\narray with one less dimension.",3,null],[11,"into_raw_vec","","Return a vector of the elements in the array, in the way they are\nstored internally.",3,null],[11,"row","","Return an array view of row `index`.",3,null],[11,"row_mut","","Return a mutable array view of row `index`.",3,null],[11,"rows","","Return the number of rows (length of `Axis(0)`) in the two-dimensional array.",3,null],[11,"column","","Return an array view of column `index`.",3,null],[11,"column_mut","","Return a mutable array view of column `index`.",3,null],[11,"cols","","Return the number of columns (length of `Axis(1)`) in the two-dimensional array.",3,null],[11,"scalar_sum","","Return the sum of all elements in the array.",3,null],[11,"sum","","Return sum along `axis`.",3,null],[11,"mean","","Return mean along `axis`.",3,null],[11,"all_close","","Return `true` if the arrays&#39; elementwise differences are all within\nthe given absolute tolerance, `false` otherwise.",3,null],[0,"linalg","","Linear algebra.",null,null],[5,"general_mat_mul","ndarray::linalg","General matrix multiplication.",null,{"inputs":[{"name":"a"},{"name":"arraybase"},{"name":"arraybase"},{"name":"a"},{"name":"arraybase"}],"output":null}],[11,"dot","ndarray","Compute the dot product of one-dimensional arrays.",3,null],[11,"dot","","Perform matrix multiplication of rectangular arrays `self` and `rhs`.",3,null],[11,"dot","","",3,null],[11,"dot","","",3,null],[11,"scaled_add","","Perform the operation `self += alpha * rhs` efficiently, where\n`alpha` is a scalar and `rhs` is another array. This operation is\nalso known as `axpy` in BLAS.",3,null],[8,"Dot","ndarray::linalg","Matrix Multiplication",null,null],[16,"Output","","The result of the operation.",19,null],[10,"dot","","",19,null],[11,"add","ndarray","",3,null],[11,"add","","",3,null],[11,"add","","",3,null],[11,"sub","","",3,null],[11,"sub","","",3,null],[11,"sub","","",3,null],[11,"mul","","",3,null],[11,"mul","","",3,null],[11,"mul","","",3,null],[11,"div","","",3,null],[11,"div","","",3,null],[11,"div","","",3,null],[11,"rem","","",3,null],[11,"rem","","",3,null],[11,"rem","","",3,null],[11,"bitand","","",3,null],[11,"bitand","","",3,null],[11,"bitand","","",3,null],[11,"bitor","","",3,null],[11,"bitor","","",3,null],[11,"bitor","","",3,null],[11,"bitxor","","",3,null],[11,"bitxor","","",3,null],[11,"bitxor","","",3,null],[11,"shl","","",3,null],[11,"shl","","",3,null],[11,"shl","","",3,null],[11,"shr","","",3,null],[11,"shr","","",3,null],[11,"shr","","",3,null],[11,"neg","","Perform an elementwise negation of `self` and return the result.",3,null],[11,"not","","Perform an elementwise unary not of `self` and return the result.",3,null],[11,"add_assign","","",3,null],[11,"add_assign","","",3,null],[11,"sub_assign","","",3,null],[11,"sub_assign","","",3,null],[11,"mul_assign","","",3,null],[11,"mul_assign","","",3,null],[11,"div_assign","","",3,null],[11,"div_assign","","",3,null],[11,"rem_assign","","",3,null],[11,"rem_assign","","",3,null],[11,"bitand_assign","","",3,null],[11,"bitand_assign","","",3,null],[11,"bitor_assign","","",3,null],[11,"bitor_assign","","",3,null],[11,"bitxor_assign","","",3,null],[11,"bitxor_assign","","",3,null],[11,"shl_assign","","",3,null],[11,"shl_assign","","",3,null],[11,"shr_assign","","",3,null],[11,"shr_assign","","",3,null],[11,"from_shape","","Create a read-only array view borrowing its data from a slice.",3,null],[11,"from_shape_ptr","","Create an `ArrayView&lt;A, D&gt;` from shape information and a\nraw pointer to the elements.",3,null],[11,"split_at","","Split the array along `axis` and return one view strictly before the\nsplit and one view after the split.",3,null],[11,"from_shape","","Create a read-write array view borrowing its data from a slice.",3,null],[11,"from_shape_ptr","","Create an `ArrayViewMut&lt;A, D&gt;` from shape information and a\nraw pointer to the elements.",3,null],[11,"split_at","","Split the array along `axis` and return one mutable view strictly\nbefore the split and one mutable view after the split.",3,null],[6,"Ix0","","zero-dimensionial",null,null],[6,"Ix1","","one-dimensional",null,null],[6,"Ix2","","two-dimensional",null,null],[6,"Ix3","","three-dimensional",null,null],[6,"Ix4","","four-dimensional",null,null],[6,"IxDyn","","dynamic-dimensional",null,null],[6,"Array0","","zero-dimensional array",null,null],[6,"Array1","","one-dimensional array",null,null],[6,"Array2","","two-dimensional array",null,null],[6,"Array3","","three-dimensional array",null,null],[6,"Array4","","four-dimensional array",null,null],[6,"ArrayD","","dynamic-dimensional array",null,null],[6,"ArrayView0","","zero-dimensional array view",null,null],[6,"ArrayView1","","one-dimensional array view",null,null],[6,"ArrayView2","","two-dimensional array view",null,null],[6,"ArrayView3","","three-dimensional array view",null,null],[6,"ArrayView4","","four-dimensional array view",null,null],[6,"ArrayViewD","","dynamic-dimensional array view",null,null],[6,"ArrayViewMut0","","zero-dimensional read-write array view",null,null],[6,"ArrayViewMut1","","one-dimensional read-write array view",null,null],[6,"ArrayViewMut2","","two-dimensional read-write array view",null,null],[6,"ArrayViewMut3","","three-dimensional read-write array view",null,null],[6,"ArrayViewMut4","","four-dimensional read-write array view",null,null],[6,"ArrayViewMutD","","dynamic-dimensional read-write array view",null,null],[6,"Ix","","Array index type",null,null],[6,"Ixs","","Array index type (signed)",null,null],[6,"RcArray","","Array where the data is reference counted and copy on write, it\ncan act as both an owner as the data as well as a lightweight view.",null,null],[6,"Array","","Array where the data is owned uniquely.",null,null],[6,"OwnedArray","","Array where the data is owned uniquely.",null,null],[6,"ArrayView","","A lightweight array view.",null,null],[6,"ArrayViewMut","","A lightweight read-write array view.",null,null],[17,"S","","Slice value for the full range of an axis.",null,null],[8,"Dimension","","Array shape and index trait.",null,null],[16,"SliceArg","","`SliceArg` is the type which is used to specify slicing for this\ndimension.",20,null],[8,"RemoveAxis","","Array shape with a next smaller dimension.",null,null],[16,"Smaller","","",21,null],[10,"remove_axis","","",21,null],[8,"NdIndex","","Tuple or fixed size arrays that can be used to index an array.",null,null],[16,"Dim","","",22,null],[8,"AsArray","","Argument conversion into an array view",null,null],[8,"LinalgScalar","","Elements that support linear algebra operations.",null,null],[8,"NdFloat","","Floating-point element types `f32` and `f64`.",null,null],[8,"ShapeBuilder","","A trait for `Shape` and `D where D: Dimension` that allows\ncustomizing the memory layout (strides) of an array shape.",null,null],[16,"Dim","","",23,null],[10,"f","","",23,null],[10,"set_f","","",23,null],[10,"strides","","",23,null],[8,"Data","","Array representation trait.",null,null],[16,"Elem","","The array element type.",24,null],[8,"DataMut","","Array representation trait.",null,null],[8,"DataOwned","","Array representation trait.",null,null],[8,"DataShared","","Array representation trait.",null,null],[8,"DataClone","","Array representation trait.",null,null],[8,"FixedInitializer","","Fixed-size array used for array initialization",null,null],[16,"Elem","","",25,null],[10,"as_init_slice","","",25,null],[10,"len","","",25,{"inputs":[],"output":{"name":"usize"}}],[8,"ScalarOperand","","Elements that can be used as direct operands in arithmetic with arrays.",null,null],[11,"clone","","",4,null],[11,"clone","","",7,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[14,"s","","Slice argument constructor.",null,null],[14,"stack","","Stack arrays along the given axis.",null,null],[11,"into_iter","","",26,null],[11,"into_iter","","",27,null],[11,"ndim","","",28,null],[11,"size","","",28,null],[11,"size_checked","","",28,null],[11,"default_strides","","",28,null],[11,"_fastest_varying_stride_order","","",28,null],[11,"first_index","","",28,null],[11,"next_for","","",28,null],[11,"stride_offset","","Self is an index, return the stride offset",28,{"inputs":[{"name":"ix"},{"name":"ix"}],"output":{"name":"isize"}}],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",28,null],[11,"remove_axis","","",28,null]],"paths":[[3,"Axis"],[3,"Si"],[4,"ErrorKind"],[3,"ArrayBase"],[3,"ViewRepr"],[3,"Indexes"],[3,"Elements"],[3,"Indexed"],[3,"ElementsMut"],[3,"IndexedMut"],[3,"InnerIter"],[3,"InnerIterMut"],[3,"AxisIter"],[3,"AxisIterMut"],[3,"AxisChunksIter"],[3,"AxisChunksIterMut"],[3,"ShapeError"],[3,"Shape"],[3,"StrideShape"],[8,"Dot"],[8,"Dimension"],[8,"RemoveAxis"],[8,"NdIndex"],[8,"ShapeBuilder"],[8,"Data"],[8,"FixedInitializer"],[6,"ArrayView"],[6,"ArrayViewMut"],[6,"Ix"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,null],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,null],[11,"ind_sample","","",4,null],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,null],[11,"ind_sample","","",5,null],[11,"clone","","",6,null],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,null],[11,"ind_sample","","",6,null],[11,"clone","","",7,null],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,null],[11,"ind_sample","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,null],[11,"ind_sample","","",8,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,null],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,null],[11,"ind_sample","","",10,null],[11,"clone","","",11,null],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,null],[11,"ind_sample","","",11,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,null],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,null],[11,"ind_sample","","",13,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,null],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,null],[11,"clone","","",16,null],[11,"sample","","",16,null],[11,"ind_sample","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,null],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,null],[11,"ind_sample","","",17,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,null],[11,"next_u32","","",18,null],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,null],[11,"next_u32","","",19,null],[11,"next_u64","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,null],[11,"next_u32","","",20,null],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,null],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,null],[11,"next_u32","","",21,null],[11,"next_u64","","",21,null],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,null],[11,"reseed","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",24,null],[11,"next_u64","","",24,null],[11,"fill_bytes","","",24,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,null],[11,"next_u64","","",25,null],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,null],[11,"next_u64","","Return the next random u64.",27,null],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",27,null],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,null],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,null],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,null],[11,"choose","","Return a random element from `values`.",27,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,null],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",29,null],[11,"next","","",30,null],[11,"clone","","",31,null],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,null],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",32,null],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",32,null],[11,"next_u64","","",32,null],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,null],[11,"next_u32","","",33,null],[11,"next_u64","","",33,null],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["chemfiles"] = {"doc":"Chemfiles is a multi-language library written in modern C++ for reading and\nwriting from and to molecular trajectory files. These files are created by\nyour favorite theoretical chemistry program, and contains informations about\natomic or residues names and positions. Some format also have additional\ninformations, such as velocities, forces, energy, …","items":[[3,"Error","chemfiles","Error type for Chemfiles.",null,null],[12,"kind","","The error kind",0,null],[12,"message","","A message describing the error cause",0,null],[3,"Logger","","This struct give access to the logging system.",null,null],[3,"Atom","","An Atom is a particle in the current Frame. It can be used to store and\nretrieve informations about a particle, such as mass, name, atomic number,\n*etc.*",null,null],[3,"UnitCell","","An `UnitCell` represent the box containing the atoms in the system, and its\nperiodicity.",null,null],[3,"Topology","","A `Topology` contains the definition of all the particles in the system, and\nthe liaisons between the particles (bonds, angles, dihedrals, ...).",null,null],[3,"Frame","","A `Frame` holds data from one step of a simulation: the current `Topology`,\nthe positions, and maybe the velocities of the particles in the system.",null,null],[3,"Trajectory","","A Trajectory is a chemistry file on the hard drive. It is the main entry\npoint of chemfiles.",null,null],[3,"Selection","","Select atoms in a `Frame` with a selection language.",null,null],[3,"Match","","A `Match` is a set of atomic indexes matching a given selection. It should\nbe used like a `&amp;[usize]`.",null,null],[4,"ErrorKind","","Possible causes of error in chemfiles",null,null],[13,"CppStdError","","Exception in the C++ standard library",1,null],[13,"ChemfilesCppError","","Exception in the C++ chemfiles library",1,null],[13,"MemoryError","","Error in memory allocations",1,null],[13,"FileError","","Error while reading or writing a file",1,null],[13,"FormatError","","Error in file formatting, *i.e.* the file is invalid",1,null],[13,"SelectionError","","Error in selection string syntax",1,null],[13,"UTF8PathError","","The given path is not valid UTF8",1,null],[13,"NullPtr","","We got a null pointer from C++",1,null],[4,"LogLevel","","Available log levels",null,null],[13,"Error","","Only log errors",2,null],[13,"Warning","","Log errors and warnings",2,null],[13,"Info","","Log errors, warnings and informations",2,null],[13,"Debug","","Log everything (errors, warnings, informations and debug informations)",2,null],[4,"AtomType","","Available types of atoms",null,null],[13,"Element","","Element from the periodic table of elements",3,null],[13,"CorseGrain","","Coarse-grained atom are composed of more than one element: CH3 groups,\namino-acids are corse-grained atoms.",3,null],[13,"Dummy","","Dummy site, with no physical reality",3,null],[13,"Undefined","","Undefined atom type",3,null],[4,"CellType","","Available unit cell types",null,null],[13,"Orthorhombic","","Orthorombic cell, with the three angles equals to 90°",4,null],[13,"Triclinic","","Triclinic cell, with any values for the angles.",4,null],[13,"Infinite","","Infinite cell, to use when there is no cell.",4,null],[5,"version","","Get the version of the chemfiles library",null,{"inputs":[],"output":{"name":"string"}}],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"from","","",0,{"inputs":[{"name":"chfl_status"}],"output":{"name":"error"}}],[11,"last_error","","Get the last error message from the C++ library.",0,{"inputs":[],"output":{"name":"string"}}],[11,"cleanup","","Clear any error from the C++ library",0,{"inputs":[],"output":null}],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"from","","",2,{"inputs":[{"name":"chfl_log_level"}],"output":{"name":"loglevel"}}],[11,"get","","Get an handle to the logging system. This function blocks, waiting for a\nmutex to be available. You should probably call this function from one\nthread only.",5,{"inputs":[],"output":{"name":"logger"}}],[11,"level","","Get the current maximal logging level",5,null],[11,"set_level","","Set the maximal logging level to `level`",5,null],[11,"log_to_file","","Write logs to the file at `path`, creating it if needed.",5,null],[11,"log_to_stderr","","Redirect the logs to the standard error stream. This is the default.",5,null],[11,"log_to_stdout","","Redirect the logs to the standard output.",5,null],[11,"log_silent","","Remove all logging output.",5,null],[11,"log_callback","","Redirect all logging to user-provided logging. The `callback` function will\nbe called at each loggin operation with the level of the message, and the\nthe message itself.",5,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[11,"from","","",3,{"inputs":[{"name":"chfl_atom_types"}],"output":{"name":"atomtype"}}],[11,"new","","Create a new `Atom` from a `name`.",6,{"inputs":[{"name":"s"}],"output":{"name":"result"}}],[11,"mass","","Get the `Atom` mass, in atomic mass units",6,null],[11,"set_mass","","Set the `Atom` mass, in atomic mass units",6,null],[11,"charge","","Get the `Atom` charge, in number of the electron charge *e*",6,null],[11,"set_charge","","Set the `Atom` charge, in number of the electron charge *e*",6,null],[11,"name","","Get the `Atom` name",6,null],[11,"set_name","","Set the `Atom` name",6,null],[11,"full_name","","Try to get the full name of the `Atom`. The full name of &quot;He&quot; is\n&quot;Helium&quot;, and so on. If the name can not be found, returns the empty\nstring.",6,null],[11,"vdw_radius","","Try to get the Van der Waals radius of the `Atom`. If the radius can not\nbe found, returns -1.",6,null],[11,"covalent_radius","","Try to get the covalent radius of the `Atom`. If the radius can not be\nfound, returns -1.",6,null],[11,"atomic_number","","Try to get the atomic number of the `Atom`. If the number can not be\nfound, returns -1.",6,null],[11,"atom_type","","Get the type of the atom",6,null],[11,"set_atom_type","","Set the type of the atom",6,null],[11,"from_ptr","","Create an `Atom` from a C pointer. This function is unsafe because no\nvalidity check is made on the pointer.",6,null],[11,"as_ptr","","Get the underlying C pointer. This function is unsafe because no\nlifetime guarantee is made on the pointer.",6,null],[11,"drop","","",6,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",4,null],[11,"from","","",4,{"inputs":[{"name":"chfl_cell_types"}],"output":{"name":"celltype"}}],[11,"new","","Create an `Orthorombic` `UnitCell` from the three lenghts, in Angstroms.",7,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"result"}}],[11,"infinite","","Create an `Infinite` `UnitCell`",7,{"inputs":[],"output":{"name":"result"}}],[11,"triclinic","","Create an `Triclinic` `UnitCell` from the three lenghts (in Angstroms)\nand three angles (in degree). `alpha` is the angle between the vectors\n`b` and `c`; `beta` is the between the vectors `a` and `c` and `gamma`\nis the angle between the vectors `a` and `b`.",7,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"result"}}],[11,"lengths","","Get the three lenghts of an `UnitCell`, in Angstroms.",7,null],[11,"set_lengths","","Set the three lenghts of an `UnitCell`, in Angstroms.",7,null],[11,"angles","","Get the three angles of an `UnitCell`, in degrees.",7,null],[11,"set_angles","","Set the three angles of an `UnitCell`, in degrees. This is only possible\nwith `Triclinic` cells.",7,null],[11,"matrix","","Get the unit cell matricial representation.",7,null],[11,"cell_type","","Get the type of the unit cell",7,null],[11,"set_cell_type","","Set the type of the unit cell",7,null],[11,"volume","","Get the volume of the unit cell",7,null],[11,"from_ptr","","Create an `UnitCell` from a C pointer. This function is unsafe because\nno validity check is made on the pointer.",7,null],[11,"as_ptr","","Get the underlying C pointer. This function is unsafe because no\nlifetime guarantee is made on the pointer.",7,null],[11,"drop","","",7,null],[11,"new","","Create a new empty topology",8,{"inputs":[],"output":{"name":"result"}}],[11,"atom","","Get a specific `Atom` from a topology, given its `index` in the topology",8,null],[11,"natoms","","Get the current number of atoms in the topology.",8,null],[11,"push","","Add an `Atom` at the end of a topology",8,null],[11,"remove","","Remove an `Atom` from a topology by index. This modify all the other\natoms indexes.",8,null],[11,"is_bond","","Tell if the atoms at indexes `i` and `j` are bonded together",8,null],[11,"is_angle","","Tell if the atoms at indexes `i`, `j` and `k` constitues an angle",8,null],[11,"is_dihedral","","Tell if the atoms at indexes `i`, `j`, `k` and `m` constitues a dihedral\nangle",8,null],[11,"bonds_count","","Get the number of bonds in the system",8,null],[11,"angles_count","","Get the number of angles in the system",8,null],[11,"dihedrals_count","","Get the number of dihedral angles in the system",8,null],[11,"bonds","","Get the list of bonds in the system",8,null],[11,"angles","","Get the list of angles in the system",8,null],[11,"dihedrals","","Get the list of dihedral angles in the system",8,null],[11,"add_bond","","Add a bond between the atoms at indexes `i` and `j` in the system",8,null],[11,"remove_bond","","Remove any existing bond between the atoms at indexes `i` and `j` in\nthe system",8,null],[11,"from_ptr","","Create a `Topology` from a C pointer. This function is unsafe because no\nvalidity check is made on the pointer.",8,null],[11,"as_ptr","","Get the underlying C pointer. This function is unsafe because no\nlifetime guarantee is made on the pointer.",8,null],[11,"drop","","",8,null],[11,"new","","Create an empty frame with initial capacity of `natoms`. It will be\nresized by the library as needed.",9,{"inputs":[{"name":"usize"}],"output":{"name":"result"}}],[11,"atom","","Get a specific `Atom` from a frame, given its `index` in the frame",9,null],[11,"natoms","","Get the current number of atoms in the `Frame`.",9,null],[11,"resize","","Resize the positions and the velocities in frame, to make space for\n`natoms` atoms. Previous data is conserved, as well as the presence of\nabsence of velocities.",9,null],[11,"positions","","Get a view into the positions of the `Frame`.",9,null],[11,"positions_mut","","Get a mutable view into the positions of the `Frame`.",9,null],[11,"velocities","","Get a view into the velocities of the `Frame`.",9,null],[11,"velocities_mut","","Get a mutable view into the velocities of the `Frame`.",9,null],[11,"has_velocities","","Check if the `Frame` has velocity information.",9,null],[11,"add_velocities","","Add velocity storage to this frame for `Frame::natoms` atoms. If the\nframe already have velocities, this does nothing.",9,null],[11,"cell","","Get the `UnitCell` from the `Frame`",9,null],[11,"set_cell","","Set the `UnitCell` of the `Frame`",9,null],[11,"topology","","Get the `Topology` from the `Frame`",9,null],[11,"set_topology","","Set the `Topology` of the `Frame`",9,null],[11,"step","","Get the `Frame` step, i.e. the frame number in the trajectory",9,null],[11,"set_step","","Set the `Frame` step",9,null],[11,"guess_topology","","Guess the bonds, angles and dihedrals in the system using an atomic\ndistance criteria",9,null],[11,"from_ptr","","Create a `Frame` from a C pointer. This function is unsafe because\nno validity check is made on the pointer.",9,null],[11,"as_ptr","","Get the underlying C pointer. This function is unsafe because no\nlifetime guarantee is made on the pointer.",9,null],[11,"drop","","",9,null],[11,"open","","Open a trajectory file in read mode.",10,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Open a trajectory file in write mode.",10,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"open_with_format","","Open a trajectory file in read mode using a specific `format`.",10,{"inputs":[{"name":"p"},{"name":"s"}],"output":{"name":"result"}}],[11,"create_with_format","","Open a trajectory file in write mode.",10,{"inputs":[{"name":"p"},{"name":"s"}],"output":{"name":"result"}}],[11,"read","","Read the next step of the trajectory into a frame",10,null],[11,"read_step","","Read a specific step of the trajectory in a frame",10,null],[11,"write","","Write a frame to the trajectory.",10,null],[11,"set_topology","","Set the topology associated with a trajectory. This topology will be\nused when reading and writing the files, replacing any topology in the\nframes or files.",10,null],[11,"set_topology_file","","Set the topology associated with a trajectory by reading the first frame\nof `filename`; and extracting the topology of this frame.",10,null],[11,"set_cell","","Set the unit cell associated with a trajectory. This cell will be used\nwhen reading and writing the files, replacing any unit cell in the\nframes or files.",10,null],[11,"nsteps","","Get the number of steps (the number of frames) in a trajectory.",10,null],[11,"sync","","Synchronize any buffered content to the hard drive.",10,null],[11,"from_ptr","","Create a `Trajectory` from a C pointer. This function is unsafe because\nno validity check is made on the pointer.",10,null],[11,"as_ptr","","Get the underlying C pointer. This function is unsafe because no\nlifetime guarantee is made on the pointer.",10,null],[11,"drop","","",10,null],[11,"fmt","","",11,null],[11,"clone","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"new","","Create a new match containing the atoms in the `atoms` slice.",11,null],[11,"iter","","Iterate over the atomic indexes in the match.",11,null],[11,"index","","",11,null],[11,"drop","","",12,null],[11,"new","","Create a new selection from the given selection string.",12,{"inputs":[{"name":"s"}],"output":{"name":"result"}}],[11,"size","","Get the size of the selection, i.e. the number of atoms we are selecting\ntogether.",12,null],[11,"evaluate","","Evaluate a selection for a given frame, and return the corresponding\nmatches.",12,null],[11,"list","","Evaluates a selection of size 1 on a given `frame`. This function\nreturns the list of atomic indexes in the frame matching this selection.",12,null],[6,"Result","","Custom result type for working with errors in chemfiles",null,null]],"paths":[[3,"Error"],[4,"ErrorKind"],[4,"LogLevel"],[4,"AtomType"],[4,"CellType"],[3,"Logger"],[3,"Atom"],[3,"UnitCell"],[3,"Topology"],[3,"Frame"],[3,"Trajectory"],[3,"Match"],[3,"Selection"]]};
searchIndex["special"] = {"doc":"[Special functions][1].","items":[[8,"Beta","special","Beta functions.",null,null],[10,"inc_beta","","Compute the incomplete beta function.",0,null],[10,"inv_inc_beta","","Compute the inverse of the incomplete beta function.",0,null],[10,"ln_beta","","Compute the natural logarithm of the beta function.",0,null],[8,"Error","","Error functions.",null,null],[10,"erf","","Compute the error function.",1,null],[10,"erfc","","Compute the complementary error function.",1,null],[8,"Gamma","","Gamma functions.",null,null],[10,"digamma","","Compute the real-valued digamma function.",2,null],[10,"gamma","","Compute the gamma function.",2,null],[10,"inc_gamma","","Compute the regularized lower incomplete gamma function.",2,null],[10,"ln_gamma","","Compute the natural logarithm of the gamma function.",2,null]],"paths":[[8,"Beta"],[8,"Error"],[8,"Gamma"]]};
searchIndex["chemfiles_sys"] = {"doc":"","items":[[3,"chfl_match_t","chemfiles_sys","",null,null],[12,"size","","",0,null],[12,"atoms","","",0,null],[4,"CHFL_TRAJECTORY","","",null,null],[4,"CHFL_CELL","","",null,null],[4,"CHFL_ATOM","","",null,null],[4,"CHFL_FRAME","","",null,null],[4,"CHFL_TOPOLOGY","","",null,null],[4,"CHFL_SELECTION","","",null,null],[5,"chfl_version","","",null,null],[5,"chfl_strerror","","",null,null],[5,"chfl_last_error","","",null,null],[5,"chfl_clear_errors","","",null,null],[5,"chfl_loglevel","","",null,null],[5,"chfl_set_loglevel","","",null,null],[5,"chfl_logfile","","",null,null],[5,"chfl_log_stdout","","",null,null],[5,"chfl_log_stderr","","",null,null],[5,"chfl_log_silent","","",null,null],[5,"chfl_log_callback","","",null,null],[5,"chfl_trajectory_open","","",null,null],[5,"chfl_trajectory_with_format","","",null,null],[5,"chfl_trajectory_read","","",null,null],[5,"chfl_trajectory_read_step","","",null,null],[5,"chfl_trajectory_write","","",null,null],[5,"chfl_trajectory_set_topology","","",null,null],[5,"chfl_trajectory_set_topology_file","","",null,null],[5,"chfl_trajectory_set_topology_with_format","","",null,null],[5,"chfl_trajectory_set_cell","","",null,null],[5,"chfl_trajectory_nsteps","","",null,null],[5,"chfl_trajectory_sync","","",null,null],[5,"chfl_trajectory_close","","",null,null],[5,"chfl_frame","","",null,null],[5,"chfl_frame_atoms_count","","",null,null],[5,"chfl_frame_positions","","",null,null],[5,"chfl_frame_velocities","","",null,null],[5,"chfl_frame_resize","","",null,null],[5,"chfl_frame_add_velocities","","",null,null],[5,"chfl_frame_has_velocities","","",null,null],[5,"chfl_frame_set_cell","","",null,null],[5,"chfl_frame_set_topology","","",null,null],[5,"chfl_frame_step","","",null,null],[5,"chfl_frame_set_step","","",null,null],[5,"chfl_frame_guess_topology","","",null,null],[5,"chfl_frame_free","","",null,null],[5,"chfl_cell","","",null,null],[5,"chfl_cell_triclinic","","",null,null],[5,"chfl_cell_from_frame","","",null,null],[5,"chfl_cell_volume","","",null,null],[5,"chfl_cell_lengths","","",null,null],[5,"chfl_cell_set_lengths","","",null,null],[5,"chfl_cell_angles","","",null,null],[5,"chfl_cell_set_angles","","",null,null],[5,"chfl_cell_matrix","","",null,null],[5,"chfl_cell_type","","",null,null],[5,"chfl_cell_set_type","","",null,null],[5,"chfl_cell_free","","",null,null],[5,"chfl_topology","","",null,null],[5,"chfl_topology_from_frame","","",null,null],[5,"chfl_topology_atoms_count","","",null,null],[5,"chfl_topology_append","","",null,null],[5,"chfl_topology_remove","","",null,null],[5,"chfl_topology_isbond","","",null,null],[5,"chfl_topology_isangle","","",null,null],[5,"chfl_topology_isdihedral","","",null,null],[5,"chfl_topology_bonds_count","","",null,null],[5,"chfl_topology_angles_count","","",null,null],[5,"chfl_topology_dihedrals_count","","",null,null],[5,"chfl_topology_bonds","","",null,null],[5,"chfl_topology_angles","","",null,null],[5,"chfl_topology_dihedrals","","",null,null],[5,"chfl_topology_add_bond","","",null,null],[5,"chfl_topology_remove_bond","","",null,null],[5,"chfl_topology_free","","",null,null],[5,"chfl_atom","","",null,null],[5,"chfl_atom_from_frame","","",null,null],[5,"chfl_atom_from_topology","","",null,null],[5,"chfl_atom_mass","","",null,null],[5,"chfl_atom_set_mass","","",null,null],[5,"chfl_atom_charge","","",null,null],[5,"chfl_atom_set_charge","","",null,null],[5,"chfl_atom_name","","",null,null],[5,"chfl_atom_set_name","","",null,null],[5,"chfl_atom_full_name","","",null,null],[5,"chfl_atom_vdw_radius","","",null,null],[5,"chfl_atom_covalent_radius","","",null,null],[5,"chfl_atom_atomic_number","","",null,null],[5,"chfl_atom_type","","",null,null],[5,"chfl_atom_set_type","","",null,null],[5,"chfl_atom_free","","",null,null],[5,"chfl_selection","","",null,null],[5,"chfl_selection_size","","",null,null],[5,"chfl_selection_evalutate","","",null,null],[5,"chfl_selection_matches","","",null,null],[5,"chfl_selection_free","","",null,null],[6,"CHFL_LOG_LEVEL","","",null,null],[6,"CHFL_CELL_TYPES","","",null,null],[6,"CHFL_ATOM_TYPES","","",null,null],[6,"CHFL_STATUS","","",null,null],[6,"chfl_logging_callback_t","","",null,null],[6,"c_bool","","",null,null],[17,"CHFL_LOG_ERROR","","",null,null],[17,"CHFL_LOG_WARNING","","",null,null],[17,"CHFL_LOG_INFO","","",null,null],[17,"CHFL_LOG_DEBUG","","",null,null],[17,"CHFL_CELL_ORTHORHOMBIC","","",null,null],[17,"CHFL_CELL_TRICLINIC","","",null,null],[17,"CHFL_CELL_INFINITE","","",null,null],[17,"CHFL_ATOM_ELEMENT","","",null,null],[17,"CHFL_ATOM_COARSE_GRAINED","","",null,null],[17,"CHFL_ATOM_DUMMY","","",null,null],[17,"CHFL_ATOM_UNDEFINED","","",null,null],[17,"CHFL_SUCCESS","","",null,null],[17,"CHFL_MEMORY_ERROR","","",null,null],[17,"CHFL_FILE_ERROR","","",null,null],[17,"CHFL_FORMAT_ERROR","","",null,null],[17,"CHFL_SELECTION_ERROR","","",null,null],[17,"CHFL_GENERIC_ERROR","","",null,null],[17,"CHFL_CXX_ERROR","","",null,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null]],"paths":[[3,"chfl_match_t"]]};
searchIndex["itertools"] = {"doc":"Itertools — extra iterator adaptors, functions and macros.","items":[[4,"Either","itertools","`Either` represents an alternative holding one value out of\neither of the two possible values.",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[4,"Diff","","A type returned by the [`diff_with`](./fn.diff_with.html) function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with both iterator&#39;s remaining elements\nstarting with the first mis-match.",1,null],[13,"Shorter","","The total number of elements that were in `J` along with the remaining elements of `I`.",1,null],[13,"Longer","","The total number of elements that were in `I` along with the remaining elements of `J`.",1,null],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for\nmore detail.",null,null],[13,"NoElements","","Empty iterator",2,null],[13,"OneElement","","Iterator with one element, so the minimum and maximum are the same",2,null],[13,"MinMax","","More than one element in the iterator, the first element is not larger\nthan the second",2,null],[4,"EitherOrBoth","","A value yielded by `ZipLongest`.\nContains one or two values, depending on which of the input iterators are exhausted.",null,null],[13,"Both","","Neither input iterator is exhausted yet, yielding two values.",3,null],[13,"Left","","The parameter iterator of `.zip_longest()` is exhausted,\nonly yielding a value from the `self` iterator.",3,null],[13,"Right","","The `self` iterator of `.zip_longest()` is exhausted,\nonly yielding a value from the parameter iterator.",3,null],[4,"FoldWhile","","An enum used for controlling the execution of `.fold_while()`.",null,null],[13,"Continue","","Continue folding with this value",4,null],[13,"Done","","Fold is complete and will return this value",4,null],[5,"cons_tuples","","Create an iterator that maps for example iterators of\n`((A, B), C)` to `(A, B, C)`.",null,{"inputs":[{"name":"i"}],"output":{"name":"constuples"}}],[5,"diff_with","","Compares every element yielded by both `i` and `j` with the given function in lock-step and\nreturns a `Diff` which describes how `j` differs from `i`.",null,{"inputs":[{"name":"i"},{"name":"j"},{"name":"f"}],"output":{"name":"option"}}],[5,"repeat_n","","Create an iterator that produces `n` repetitions of `element`.",null,{"inputs":[{"name":"a"},{"name":"usize"}],"output":{"name":"repeatn"}}],[5,"repeat_call","","An iterator source that produces elements indefinitely by calling\na given closure.",null,{"inputs":[{"name":"f"}],"output":{"name":"repeatcall"}}],[5,"unfold","","Creates a new unfold source with the specified closure as the &quot;iterator\nfunction&quot; and an initial state to eventually pass to the closure",null,{"inputs":[{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[5,"iterate","","Creates a new iterator that infinitely applies function to value and yields results.",null,{"inputs":[{"name":"st"},{"name":"f"}],"output":{"name":"iterate"}}],[5,"multizip","","An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.",null,{"inputs":[{"name":"u"}],"output":{"name":"zip"}}],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"interleave"}}],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"merge"}}],[5,"multipeek","","An iterator adaptor that allows the user to peek at multiple `.next()`\nvalues without advancing the base iterator.",null,{"inputs":[{"name":"i"}],"output":{"name":"multipeek"}}],[5,"put_back","","Create an iterator where you can put back a single item",null,{"inputs":[{"name":"i"}],"output":{"name":"putback"}}],[5,"put_back_n","","Create an iterator where you can put back multiple values to the front\nof the iteration.",null,{"inputs":[{"name":"i"}],"output":{"name":"putbackn"}}],[5,"kmerge","","Create an iterator that merges elements of the contained iterators.",null,{"inputs":[{"name":"i"}],"output":{"name":"kmerge"}}],[5,"zip_eq","","Iterate `i` and `j` in lock step.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"zipeq"}}],[5,"rciter","","Return an iterator inside a `Rc&lt;RefCell&lt;_&gt;&gt;` wrapper.",null,{"inputs":[{"name":"i"}],"output":{"name":"rciter"}}],[5,"enumerate","","Iterate `iterable` with a running index.",null,{"inputs":[{"name":"i"}],"output":{"name":"enumerate"}}],[5,"rev","","Iterate `iterable` in reverse.",null,{"inputs":[{"name":"i"}],"output":{"name":"rev"}}],[5,"zip","","Iterate `i` and `j` in lock step.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"zip"}}],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"chain"}}],[5,"cloned","","Create an iterator that clones each element from &amp;T to T",null,{"inputs":[{"name":"i"}],"output":{"name":"cloned"}}],[5,"fold","","Perform a fold operation over the iterable.",null,{"inputs":[{"name":"i"},{"name":"b"},{"name":"f"}],"output":{"name":"b"}}],[5,"all","","Test whether the predicate holds for all elements in the iterable.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"bool"}}],[5,"any","","Test whether the predicate holds for any elements in the iterable.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"bool"}}],[5,"max","","Return the maximum value of the iterable.",null,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[5,"min","","Return the minimum value of the iterable.",null,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[5,"join","","Combine all iterator elements into one String, seperated by `sep`.",null,{"inputs":[{"name":"i"},{"name":"str"}],"output":{"name":"string"}}],[5,"sorted","","Collect all the iterable&#39;s elements into a sorted vector in ascending order.",null,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[5,"equal","","Return `true` if both iterators produce equal sequences\n(elements pairwise equal and sequences of the same length),\n`false` otherwise.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"bool"}}],[5,"assert_equal","","Assert that two iterators produce equal sequences, with the same\nsemantics as *equal(a, b)*.",null,{"inputs":[{"name":"i"},{"name":"j"}],"output":null}],[5,"partition","","Partition a sequence using predicate `pred` so that elements\nthat map to `true` are placed before elements which map to `false`.",null,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"usize"}}],[0,"structs","","The concrete iterator types.",null,null],[3,"Dedup","itertools::structs","An iterator adaptor that removes repeated duplicates.",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two iterators until both\nrun out.",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two iterators until\none of them runs out.",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators `I` and `J`.",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single\nitem to the front of the iterator.",null,null],[3,"PutBackN","","An iterator adaptor that allows putting multiple\nitems in front of the iterator.",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator\nand may pick off as many elements as it likes, to produce the next iterator element.",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the base iterator\nfor each iteration.",null,null],[3,"MapResults","","An iterator adapter to apply a transformation within a nested `Result`.",null,null],[3,"Merge","","An iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",null,null],[3,"MultiPeek","","See [`multipeek()`](../fn.multipeek.html) for more information.",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able iterator\nto only pick off elements while the predicate returns `true`.",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option&lt;A&gt;` iterator elements\nand produces `A`. Stops on the first `None` encountered.",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent elements.",null,null],[3,"TupleCombinations","","An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples\nof a specific size.",null,null],[3,"Combinations","","An iterator to iterate through all the `n`-length combinations in an iterator.",null,null],[3,"Unique","","An iterator adapter to filter out duplicate elements.",null,null],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",null,null],[3,"Flatten","","An iterator adapter to simply flatten a structure.",null,null],[3,"ConsTuples","","An iterator that maps an iterator of tuples like\n`((A, B), C)` to an iterator of `(A, B, C)`.",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",null,null],[3,"Chunk","","An iterator for the elements in a single chunk.",null,null],[3,"Chunks","","An iterator that yields the Chunk iterators.",null,null],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",null,null],[3,"Group","","An iterator for the elements in a single group.",null,null],[3,"Groups","","An iterator that yields the Group iterators.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.",null,null],[3,"KMerge","","An iterator adaptor that merges an abitrary number of base iterators in ascending order.\nIf all base iterators are sorted (ascending), the result is sorted.",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum length by filling\nmissing elements using a closure.",null,null],[3,"RcIter","","A wrapper for `Rc&lt;RefCell&lt;I&gt;&gt;`, that implements the `Iterator` trait.",null,null],[12,"rciter","","The boxed iterator.",5,null],[3,"RepeatN","","An iterator that produces *n* repetitions of an element.",null,null],[3,"RepeatCall","","See [`repeat_call`](../fn.repeat_call.html) for more information.",null,null],[3,"Unfold","","See [`unfold`](../fn.unfold.html) for more information.",null,null],[12,"state","","Internal state that will be passed to the closure on the next iteration",6,null],[3,"Iterate","","An iterator that infinitely applies function to value and yields results.",null,null],[3,"Tee","","One half of an iterator pair where both return the same elements.",null,null],[3,"TupleBuffer","","An iterator over a incomplete tuple.",null,null],[3,"TupleWindows","","An iterator over all contiguous windows that produces tuples of a specific size.",null,null],[3,"Tuples","","An iterator that groups the items in tuples of a specific size.",null,null],[3,"ZipEq","","An iterator which iterates two other iterators simultaneously",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators simultaneously",null,null],[3,"Zip","","See [`multizip`](../fn.multizip.html) for more information.",null,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"next","","",7,null],[11,"size_hint","","",7,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"with_value","","put back value `value` (builder method)",9,null],[11,"into_parts","","Split the `PutBack` into its parts.",9,null],[11,"put_back","","Put back a single value to the front of the iterator.",9,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"all","","",9,null],[11,"fold","","",9,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"put_back","","Puts x in front of the iterator.\nThe values are yielded in order of the most recently put back\nvalues first.",10,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"fmt","","",11,null],[11,"clone","","",11,null],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"next","","",14,null],[11,"size_hint","","",14,null],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"next","","",15,null],[11,"size_hint","","",15,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"peek","","Works exactly like `.next()` with the only difference that it doesn&#39;t\nadvance itself. `.peek()` can be called multiple times, to peek\nfurther ahead.",16,null],[11,"next","","",16,null],[11,"size_hint","","",16,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"next","","",17,null],[11,"size_hint","","",17,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"next","","",18,null],[11,"size_hint","","",18,null],[11,"fold","","",18,null],[11,"fmt","","",19,null],[11,"next","","",19,null],[11,"size_hint","","",19,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"next","","",20,null],[11,"size_hint","","",20,null],[11,"fmt","","",21,null],[11,"next","","",21,null],[11,"fmt","","",22,null],[11,"next","","",22,null],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"next","","",23,null],[11,"size_hint","","",23,null],[11,"next","","",24,null],[11,"size_hint","","",24,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"clone","","",25,null],[11,"fmt","","",25,null],[11,"next","","",25,null],[11,"fold","","",25,null],[11,"next_back","","",25,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"next_back","","",27,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"next_back","","",27,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"next_back","","",27,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"next_back","","",27,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"next_back","","",27,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"next_back","","",27,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"fmt","","",29,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"fmt","","",28,null],[11,"next","","",30,null],[11,"drop","","",31,null],[11,"next","","",31,null],[11,"next","","",32,null],[11,"drop","","",33,null],[11,"next","","",33,null],[11,"clone","","",34,null],[11,"next","","",34,null],[11,"size_hint","","",34,null],[11,"clone","","",35,null],[11,"next","","",35,null],[11,"size_hint","","",35,null],[11,"clone","itertools","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x, y)` is returned where `x &lt;= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",2,null],[11,"clone","itertools::structs","",36,null],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"next_back","","",36,null],[11,"clone","","",5,null],[11,"next","","",5,null],[11,"size_hint","","",5,null],[11,"next_back","","",5,null],[11,"new","","",37,{"inputs":[{"name":"a"},{"name":"usize"}],"output":{"name":"self"}}],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"next_back","","",37,null],[11,"fmt","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"next","","",41,null],[11,"next","","",42,null],[11,"into_buffer","","Return a buffer with the produced items that was not enough to be grouped in a tuple.",42,null],[11,"next","","",43,null],[11,"clone","","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"clone","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next_back","","",45,null],[11,"clone","itertools","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"clone","itertools::structs","",46,null],[11,"new","","Deprecated: renamed to multizip",46,{"inputs":[{"name":"u"}],"output":{"name":"zip"}}],[11,"from","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"from","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"from","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"from","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"from","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"from","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"from","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"from","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[8,"Itertools","itertools","The trait `Itertools`: extra iterator adaptors and methods for iterators.",null,null],[11,"interleave","","Alternate elements from two iterators until both\nrun out.",47,null],[11,"interleave_shortest","","Alternate elements from two iterators until one of them runs out.",47,null],[11,"intersperse","","An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.",47,null],[11,"zip_longest","","Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of two optional elements.",47,null],[11,"zip_eq","","Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of elements.",47,null],[11,"batching","","A “meta iterator adaptor”. Its closure recives a reference to the\niterator and may pick off as many elements as it likes, to produce the\nnext iterator element.",47,null],[11,"group_by","","Return an *iterable* that can group iterator elements.\nConsecutive elements that map to the same key (“runs”), are assigned\nto the same group.",47,null],[11,"group_by_lazy","","",47,null],[11,"chunks","","Return an *iterable* that can chunk the iterator.",47,null],[11,"chunks_lazy","","",47,null],[11,"tuple_windows","","Return an iterator over all contiguous windows producing tuples of\na specific size (up to 4).",47,null],[11,"tuples","","Return an iterator that groups the items in tuples of a specific size\n(up to 4).",47,null],[11,"tee","","Split into an iterator pair that both yield all elements from\nthe original iterator.",47,null],[11,"step","","Return an iterator adaptor that steps `n` elements in the base iterator\nfor each iteration.",47,null],[11,"map_results","","Return an iterator adaptor that applies the provided closure\nto every `Result::Ok` value. `Result::Err` values are\nunchanged.",47,null],[11,"merge","","Return an iterator adaptor that merges the two base iterators in\nascending order.  If both base iterators are sorted (ascending), the\nresult is sorted.",47,null],[11,"merge_by","","Return an iterator adaptor that merges the two base iterators in order.\nThis is much like `.merge()` but allows for a custom ordering.",47,null],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of iterators by\nmerging them in ascending order.",47,null],[11,"cartesian_product","","Return an iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators `self` and `J`.",47,null],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure to\noptionally merge together consecutive elements.",47,null],[11,"dedup","","Remove duplicates from sections of consecutive identical elements.\nIf the iterator is sorted, all elements will be unique.",47,null],[11,"unique","","Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration. Duplicates\nare detected using hash and equality.",47,null],[11,"unique_by","","Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration.",47,null],[11,"take_while_ref","","Return an iterator adaptor that borrows from a `Clone`-able iterator\nto only pick off elements while the predicate `f` returns `true`.",47,null],[11,"while_some","","Return an iterator adaptor that filters `Option&lt;A&gt;` iterator elements\nand produces `A`. Stops on the first `None` encountered.",47,null],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the combinations of the\nelements from an iterator.",47,null],[11,"combinations","","Return an iterator adaptor that iterates over the `n`-length combinations of\nthe elements from an iterator.",47,null],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a minimum length of\n`min` by filling missing elements using a closure `f`.",47,null],[11,"flatten","","Unravel a nested iterator.",47,null],[11,"next_tuple","","Advances the iterator and returns the next items grouped in a tuple of\na specific size (up to 4).",47,null],[11,"find_position","","Find the position and value of the first element satisfying a predicate.",47,null],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,\nand return the same iterator again.",47,null],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,\nand return the same iterator again.",47,null],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",47,null],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of `.collect()`,\nfor convenience.",47,null],[11,"set_from","","Assign to each reference in `self` from the `from` iterator,\nstopping at the shortest of the two iterators.",47,null],[11,"join","","Combine all iterator elements into one String, seperated by `sep`.",47,null],[11,"format","","Format all iterator elements, separated by `sep`.",47,null],[11,"format_default","","",47,null],[11,"format_with","","Format all iterator elements, separated by `sep`.",47,null],[11,"fold_results","","Fold `Result` values from an iterator.",47,null],[11,"fold_options","","Fold `Option` values from an iterator.",47,null],[11,"fold1","","Accumulator of the elements in the iterator.",47,null],[11,"fold_while","","An iterator method that applies a function, producing a single, final value.",47,null],[11,"sorted","","Collect all iterator elements into a sorted vector in ascending order.",47,null],[11,"sorted_by","","Collect all iterator elements into a sorted vector.",47,null],[11,"partition_map","","Collect all iterator elements into one of two\npartitions. Unlike `Iterator::partition`, each partition may\nhave a distinct type.",47,null],[11,"minmax","","Return the minimum and maximum elements in the iterator.",47,null],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as determined by\nthe specified function.",47,null],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as determined by\nthe specified comparison function.",47,null],[14,"iproduct","","Create an iterator over the “cartesian product” of iterators.",null,null],[14,"izip","","Create an iterator running multiple iterators in lockstep.",null,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,null],[11,"is_right","","Return true if the value is the `Right` variant.",0,null],[11,"left","","Convert the left side of `Either&lt;L, R&gt;` to an `Option&lt;L&gt;`.",0,null],[11,"right","","Convert the right side of `Either&lt;L, R&gt;` to an `Option&lt;R&gt;`.",0,null],[11,"as_ref","","Convert `&amp;Either&lt;L, R&gt;` to `Either&lt;&amp;L, &amp;R&gt;`.",0,null],[11,"as_mut","","Convert `&amp;mut Either&lt;L, R&gt;` to `Either&lt;&amp;mut L, &amp;mut R&gt;`.",0,null],[11,"flip","","Convert `Either&lt;L, R&gt;` to `Either&lt;R, L&gt;`.",0,null],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present.",0,null],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present.",0,null],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is\n`Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second\nfunction `g` is applied.",0,null],[11,"deref_mut","","",0,null],[11,"from","","",0,{"inputs":[{"name":"result"}],"output":{"name":"either"}}],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"fmt","","",0,null],[11,"next_back","","",0,null],[11,"as_ref","","",0,null],[11,"clone","","",0,null],[11,"deref","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"into","","",0,null],[11,"cmp","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"fold","","",0,null],[11,"count","","",0,null],[11,"last","","",0,null],[11,"nth","","",0,null],[11,"collect","","",0,null],[11,"all","","",0,null],[11,"as_mut","","",0,null],[11,"extend","","",0,null]],"paths":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"PutBack"],[3,"PutBackN"],[3,"Product"],[3,"Batching"],[3,"Step"],[3,"Merge"],[3,"MergeBy"],[3,"MultiPeek"],[3,"Coalesce"],[3,"Dedup"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"TupleCombinations"],[3,"Combinations"],[3,"UniqueBy"],[3,"Unique"],[3,"Flatten"],[3,"MapResults"],[3,"ConsTuples"],[3,"Format"],[3,"FormatWith"],[3,"Groups"],[3,"Group"],[3,"Chunks"],[3,"Chunk"],[3,"Intersperse"],[3,"KMerge"],[3,"PadUsing"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"Tuples"],[3,"TupleWindows"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"],[8,"Itertools"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",15,null],[12,"sa_data","","",15,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",16,null],[12,"sin_port","","",16,null],[12,"sin_addr","","",16,null],[12,"sin_zero","","",16,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",17,null],[12,"sin6_port","","",17,null],[12,"sin6_flowinfo","","",17,null],[12,"sin6_addr","","",17,null],[12,"sin6_scope_id","","",17,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",18,null],[12,"sun_path","","",18,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",19,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",20,null],[12,"ai_family","","",20,null],[12,"ai_socktype","","",20,null],[12,"ai_protocol","","",20,null],[12,"ai_addrlen","","",20,null],[12,"ai_addr","","",20,null],[12,"ai_canonname","","",20,null],[12,"ai_next","","",20,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",21,null],[12,"nl_pid","","",21,null],[12,"nl_groups","","",21,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",22,null],[12,"sll_protocol","","",22,null],[12,"sll_ifindex","","",22,null],[12,"sll_hatype","","",22,null],[12,"sll_pkttype","","",22,null],[12,"sll_halen","","",22,null],[12,"sll_addr","","",22,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",23,null],[12,"tm_min","","",23,null],[12,"tm_hour","","",23,null],[12,"tm_mday","","",23,null],[12,"tm_mon","","",23,null],[12,"tm_year","","",23,null],[12,"tm_wday","","",23,null],[12,"tm_yday","","",23,null],[12,"tm_isdst","","",23,null],[12,"tm_gmtoff","","",23,null],[12,"tm_zone","","",23,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",24,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",25,null],[12,"dli_fbase","","",25,null],[12,"dli_sname","","",25,null],[12,"dli_saddr","","",25,null],[3,"epoll_event","","",null,null],[12,"events","","",26,null],[12,"u64","","",26,null],[3,"utsname","","",null,null],[12,"sysname","","",27,null],[12,"nodename","","",27,null],[12,"release","","",27,null],[12,"version","","",27,null],[12,"machine","","",27,null],[12,"domainname","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"dirent","","",null,null],[12,"d_ino","","",29,null],[12,"d_off","","",29,null],[12,"d_reclen","","",29,null],[12,"d_type","","",29,null],[12,"d_name","","",29,null],[3,"dirent64","","",null,null],[12,"d_ino","","",30,null],[12,"d_off","","",30,null],[12,"d_reclen","","",30,null],[12,"d_type","","",30,null],[12,"d_name","","",30,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",31,null],[12,"rlim_max","","",31,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",32,null],[12,"gl_pathv","","",32,null],[12,"gl_offs","","",32,null],[12,"gl_flags","","",32,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",33,null],[12,"ifa_name","","",33,null],[12,"ifa_flags","","",33,null],[12,"ifa_addr","","",33,null],[12,"ifa_netmask","","",33,null],[12,"ifa_ifu","","",33,null],[12,"ifa_data","","",33,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",34,null],[12,"pw_passwd","","",34,null],[12,"pw_uid","","",34,null],[12,"pw_gid","","",34,null],[12,"pw_gecos","","",34,null],[12,"pw_dir","","",34,null],[12,"pw_shell","","",34,null],[3,"spwd","","",null,null],[12,"sp_namp","","",35,null],[12,"sp_pwdp","","",35,null],[12,"sp_lstchg","","",35,null],[12,"sp_min","","",35,null],[12,"sp_max","","",35,null],[12,"sp_warn","","",35,null],[12,"sp_inact","","",35,null],[12,"sp_expire","","",35,null],[12,"sp_flag","","",35,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",36,null],[12,"f_frsize","","",36,null],[12,"f_blocks","","",36,null],[12,"f_bfree","","",36,null],[12,"f_bavail","","",36,null],[12,"f_files","","",36,null],[12,"f_ffree","","",36,null],[12,"f_favail","","",36,null],[12,"f_fsid","","",36,null],[12,"f_flag","","",36,null],[12,"f_namemax","","",36,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",37,null],[12,"dqb_bsoftlimit","","",37,null],[12,"dqb_curspace","","",37,null],[12,"dqb_ihardlimit","","",37,null],[12,"dqb_isoftlimit","","",37,null],[12,"dqb_curinodes","","",37,null],[12,"dqb_btime","","",37,null],[12,"dqb_itime","","",37,null],[12,"dqb_valid","","",37,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",38,null],[12,"ssi_errno","","",38,null],[12,"ssi_code","","",38,null],[12,"ssi_pid","","",38,null],[12,"ssi_uid","","",38,null],[12,"ssi_fd","","",38,null],[12,"ssi_tid","","",38,null],[12,"ssi_band","","",38,null],[12,"ssi_overrun","","",38,null],[12,"ssi_trapno","","",38,null],[12,"ssi_status","","",38,null],[12,"ssi_int","","",38,null],[12,"ssi_ptr","","",38,null],[12,"ssi_utime","","",38,null],[12,"ssi_stime","","",38,null],[12,"ssi_addr","","",38,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",39,null],[12,"mq_maxmsg","","",39,null],[12,"mq_msgsize","","",39,null],[12,"mq_curmsgs","","",39,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",40,null],[12,"if_name","","",40,null],[3,"msginfo","","",null,null],[12,"msgpool","","",41,null],[12,"msgmap","","",41,null],[12,"msgmax","","",41,null],[12,"msgmnb","","",41,null],[12,"msgmni","","",41,null],[12,"msgssz","","",41,null],[12,"msgtql","","",41,null],[12,"msgseg","","",41,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",42,null],[12,"e_exit","","",42,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",43,null],[12,"tv_usec","","",43,null],[3,"utmpx","","",null,null],[12,"ut_type","","",44,null],[12,"ut_pid","","",44,null],[12,"ut_line","","",44,null],[12,"ut_id","","",44,null],[12,"ut_user","","",44,null],[12,"ut_host","","",44,null],[12,"ut_exit","","",44,null],[12,"ut_session","","",44,null],[12,"ut_tv","","",44,null],[12,"ut_addr_v6","","",44,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",45,null],[12,"sa_mask","","",45,null],[12,"sa_flags","","",45,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",46,null],[12,"ss_flags","","",46,null],[12,"ss_size","","",46,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",47,null],[12,"si_errno","","",47,null],[12,"si_code","","",47,null],[12,"_pad","","",47,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",48,null],[12,"gl_pathv","","",48,null],[12,"gl_offs","","",48,null],[12,"gl_flags","","",48,null],[3,"ucred","","",null,null],[12,"pid","","",49,null],[12,"uid","","",49,null],[12,"gid","","",49,null],[3,"statfs","","",null,null],[12,"f_type","","",50,null],[12,"f_bsize","","",50,null],[12,"f_blocks","","",50,null],[12,"f_bfree","","",50,null],[12,"f_bavail","","",50,null],[12,"f_files","","",50,null],[12,"f_ffree","","",50,null],[12,"f_fsid","","",50,null],[12,"f_namelen","","",50,null],[12,"f_frsize","","",50,null],[3,"msghdr","","",null,null],[12,"msg_name","","",51,null],[12,"msg_namelen","","",51,null],[12,"msg_iov","","",51,null],[12,"msg_iovlen","","",51,null],[12,"msg_control","","",51,null],[12,"msg_controllen","","",51,null],[12,"msg_flags","","",51,null],[3,"termios","","",null,null],[12,"c_iflag","","",52,null],[12,"c_oflag","","",52,null],[12,"c_cflag","","",52,null],[12,"c_lflag","","",52,null],[12,"c_line","","",52,null],[12,"c_cc","","",52,null],[12,"c_ispeed","","",52,null],[12,"c_ospeed","","",52,null],[3,"flock","","",null,null],[12,"l_type","","",53,null],[12,"l_whence","","",53,null],[12,"l_start","","",53,null],[12,"l_len","","",53,null],[12,"l_pid","","",53,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",54,null],[12,"loads","","",54,null],[12,"totalram","","",54,null],[12,"freeram","","",54,null],[12,"sharedram","","",54,null],[12,"bufferram","","",54,null],[12,"totalswap","","",54,null],[12,"freeswap","","",54,null],[12,"procs","","",54,null],[12,"pad","","",54,null],[12,"totalhigh","","",54,null],[12,"freehigh","","",54,null],[12,"mem_unit","","",54,null],[12,"_f","","",54,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",55,null],[12,"msg_stime","","",55,null],[12,"msg_rtime","","",55,null],[12,"msg_ctime","","",55,null],[12,"msg_qnum","","",55,null],[12,"msg_qbytes","","",55,null],[12,"msg_lspid","","",55,null],[12,"msg_lrpid","","",55,null],[3,"stat","","",null,null],[12,"st_dev","","",56,null],[12,"st_ino","","",56,null],[12,"st_nlink","","",56,null],[12,"st_mode","","",56,null],[12,"st_uid","","",56,null],[12,"st_gid","","",56,null],[12,"st_rdev","","",56,null],[12,"st_size","","",56,null],[12,"st_blksize","","",56,null],[12,"st_blocks","","",56,null],[12,"st_atime","","",56,null],[12,"st_atime_nsec","","",56,null],[12,"st_mtime","","",56,null],[12,"st_mtime_nsec","","",56,null],[12,"st_ctime","","",56,null],[12,"st_ctime_nsec","","",56,null],[3,"stat64","","",null,null],[12,"st_dev","","",57,null],[12,"st_ino","","",57,null],[12,"st_nlink","","",57,null],[12,"st_mode","","",57,null],[12,"st_uid","","",57,null],[12,"st_gid","","",57,null],[12,"st_rdev","","",57,null],[12,"st_size","","",57,null],[12,"st_blksize","","",57,null],[12,"st_blocks","","",57,null],[12,"st_atime","","",57,null],[12,"st_atime_nsec","","",57,null],[12,"st_mtime","","",57,null],[12,"st_mtime_nsec","","",57,null],[12,"st_ctime","","",57,null],[12,"st_ctime_nsec","","",57,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",58,null],[12,"exponent","","",58,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",59,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",60,null],[12,"swd","","",60,null],[12,"ftw","","",60,null],[12,"fop","","",60,null],[12,"rip","","",60,null],[12,"rdp","","",60,null],[12,"mxcsr","","",60,null],[12,"mxcr_mask","","",60,null],[12,"_st","","",60,null],[12,"_xmm","","",60,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",61,null],[12,"fpregs","","",61,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",62,null],[12,"uc_link","","",62,null],[12,"uc_stack","","",62,null],[12,"uc_mcontext","","",62,null],[12,"uc_sigmask","","",62,null],[3,"ipc_perm","","",null,null],[12,"__key","","",63,null],[12,"uid","","",63,null],[12,"gid","","",63,null],[12,"cuid","","",63,null],[12,"cgid","","",63,null],[12,"mode","","",63,null],[12,"__seq","","",63,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",64,null],[12,"shm_segsz","","",64,null],[12,"shm_atime","","",64,null],[12,"shm_dtime","","",64,null],[12,"shm_ctime","","",64,null],[12,"shm_cpid","","",64,null],[12,"shm_lpid","","",64,null],[12,"shm_nattch","","",64,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"sethostname","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",56,null],[11,"clone","","",57,null],[11,"clone","","",65,null],[11,"clone","","",58,null],[11,"clone","","",59,null],[11,"clone","","",60,null],[11,"clone","","",61,null],[11,"clone","","",62,null],[11,"clone","","",63,null],[11,"clone","","",64,null],[11,"clone","","",66,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",67,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",68,null],[11,"clone","","",69,null],[11,"clone","","",70,null],[11,"clone","","",71,null],[11,"clone","","",72,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",73,null],[11,"clone","","",39,null],[11,"clone","","",74,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",75,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["num_complex"] = {"doc":"Complex numbers.","items":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"new","","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn&#39;t necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",0,null],[11,"scale","","Multiplies `self` by the scalar `t`.",0,null],[11,"unscale","","Divides `self` by the scalar `t`.",0,null],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,null],[11,"inv","","Returns `1/self`",0,null],[11,"norm","","Calculate |self|",0,null],[11,"arg","","Calculate the principal Arg of self.",0,null],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,null],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,null],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,null],[11,"powf","","Raises `self` to a floating point power.",0,null],[11,"log","","Returns the logarithm of `self` with respect to an arbitrary base.",0,null],[11,"powc","","Raises `self` to a complex power.",0,null],[11,"expf","","Raises a floating point number to the complex power `self`.",0,null],[11,"sin","","Computes the sine of `self`.",0,null],[11,"cos","","Computes the cosine of `self`.",0,null],[11,"tan","","Computes the tangent of `self`.",0,null],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,null],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,null],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,null],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,null],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,null],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,null],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,null],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,null],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,null],[11,"is_nan","","Checks if the given complex number is NaN",0,null],[11,"is_infinite","","Checks if the given complex number is infinite",0,null],[11,"is_finite","","Checks if the given complex number is finite",0,null],[11,"is_normal","","Checks if the given complex number is normal",0,null],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null]],"paths":[[3,"Complex"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,null],[10,"abs_sub","","The positive difference of two numbers.",4,null],[10,"signum","","Returns the sign of the number.",4,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",5,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",5,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",6,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",7,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",8,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",9,null],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",11,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",11,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",11,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",11,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",11,null],[10,"floor","","Returns the largest integer less than or equal to a number.",11,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",11,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",11,null],[10,"trunc","","Return the integer part of a number.",11,null],[10,"fract","","Returns the fractional part of a number.",11,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",11,null],[10,"signum","","Returns a number that represents the sign of `self`.",11,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",11,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",11,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",11,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",11,null],[10,"powi","","Raise a number to an integer power.",11,null],[10,"powf","","Raise a number to a floating point power.",11,null],[10,"sqrt","","Take the square root of a number.",11,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",11,null],[10,"exp2","","Returns `2^(self)`.",11,null],[10,"ln","","Returns the natural logarithm of the number.",11,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",11,null],[10,"log2","","Returns the base 2 logarithm of the number.",11,null],[10,"log10","","Returns the base 10 logarithm of the number.",11,null],[11,"to_degrees","","Converts radians to degrees.",11,null],[11,"to_radians","","Converts degrees to radians.",11,null],[10,"max","","Returns the maximum of the two numbers.",11,null],[10,"min","","Returns the minimum of the two numbers.",11,null],[10,"abs_sub","","The positive difference of two numbers.",11,null],[10,"cbrt","","Take the cubic root of a number.",11,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",11,null],[10,"sin","","Computes the sine of a number (in radians).",11,null],[10,"cos","","Computes the cosine of a number (in radians).",11,null],[10,"tan","","Computes the tangent of a number (in radians).",11,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",11,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",11,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",11,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",11,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",11,null],[10,"sinh","","Hyperbolic sine function.",11,null],[10,"cosh","","Hyperbolic cosine function.",11,null],[10,"tanh","","Hyperbolic tangent function.",11,null],[10,"asinh","","Inverse hyperbolic sine function.",11,null],[10,"acosh","","Inverse hyperbolic cosine function.",11,null],[10,"atanh","","Inverse hyperbolic tangent function.",11,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",11,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedes’ constant.",12,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",16,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",16,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",16,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",16,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",16,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",16,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",16,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",16,null],[10,"swap_bytes","","Reverses the byte order of the integer.",16,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",16,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",16,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",16,null],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","num_traits","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",17,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",17,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"fmt","","",0,null]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[8,"__Deref","lazy_static","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",0,null],[10,"deref","","The method called to dereference a value",0,null],[0,"lazy","","",null,null],[3,"Lazy","lazy_static::lazy","",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[11,"get","","",1,null],[14,"__lazy_static_create","lazy_static","",null,null],[14,"lazy_static","","",null,null]],"paths":[[8,"__Deref"],[3,"Lazy"]]};
searchIndex["either"] = {"doc":"The enum [**Either**](enum.Either.html).","items":[[4,"Either","either","`Either` represents an alternative holding one value out of\neither of the two possible values.",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,null],[11,"is_right","","Return true if the value is the `Right` variant.",0,null],[11,"left","","Convert the left side of `Either&lt;L, R&gt;` to an `Option&lt;L&gt;`.",0,null],[11,"right","","Convert the right side of `Either&lt;L, R&gt;` to an `Option&lt;R&gt;`.",0,null],[11,"as_ref","","Convert `&amp;Either&lt;L, R&gt;` to `Either&lt;&amp;L, &amp;R&gt;`.",0,null],[11,"as_mut","","Convert `&amp;mut Either&lt;L, R&gt;` to `Either&lt;&amp;mut L, &amp;mut R&gt;`.",0,null],[11,"flip","","Convert `Either&lt;L, R&gt;` to `Either&lt;R, L&gt;`.",0,null],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present.",0,null],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present.",0,null],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is\n`Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second\nfunction `g` is applied.",0,null],[11,"from","","",0,{"inputs":[{"name":"result"}],"output":{"name":"self"}}],[11,"into","","",0,null],[11,"extend","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"fold","","",0,null],[11,"count","","",0,null],[11,"last","","",0,null],[11,"nth","","",0,null],[11,"collect","","",0,null],[11,"all","","",0,null],[11,"next_back","","",0,null],[11,"as_ref","","",0,null],[11,"as_mut","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"fmt","","",0,null],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which fails early\nwith the opposite side. Can only be used in functions that return\n`Either` because of the early return of `Right` that it provides.",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more information.",null,null]],"paths":[[4,"Either"]]};
searchIndex["matrixmultiply"] = {"doc":"","items":[[5,"sgemm","matrixmultiply","General matrix multiplication (f32)",null,null],[5,"dgemm","","General matrix multiplication (f64)",null,null]],"paths":[]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,null],[10,"log","","Logs the `LogRecord`.",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,null],[11,"args","","The message body.",3,null],[11,"metadata","","Metadata about the log directive.",3,null],[11,"location","","The location of the log directive.",3,null],[11,"level","","The verbosity level of the message.",3,null],[11,"target","","The name of the target of the directive.",3,null],[11,"level","","The verbosity level of the message.",4,null],[11,"target","","The name of the target of the directive.",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"module_path","","The module path of the message.",5,null],[11,"file","","The source file containing the message.",5,null],[11,"line","","The line containing the message.",5,null],[11,"fmt","","",6,null],[11,"get","","Gets the current maximum log level filter.",6,null],[11,"set","","Sets the maximum log level.",6,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"description","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"description","","",8,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
initSearch(searchIndex);
